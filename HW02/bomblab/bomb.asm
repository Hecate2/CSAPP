; ---------------------------------------------------------------------------

Elf64_Sym       struc ; (sizeof=0x18, align=0x8, mappedto_1)
                                        ; XREF: LOAD:00000000004002C8/r
                                        ; LOAD:00000000004002E0/r ...
st_name         dd ?                    ; offset (004005F8)
st_info         db ?
st_other        db ?
st_shndx        dw ?
st_value        dq ?                    ; offset (00000000)
st_size         dq ?
Elf64_Sym       ends

; ---------------------------------------------------------------------------

Elf64_Rela      struc ; (sizeof=0x18, align=0x8, copyof_2)
                                        ; XREF: LOAD:0000000000400820/r
                                        ; LOAD:0000000000400838/r ...
r_offset        dq ?
r_info          dq ?
r_addend        dq ?
Elf64_Rela      ends

; ---------------------------------------------------------------------------

Elf64_Dyn       struc ; (sizeof=0x10, align=0x8, copyof_3)
                                        ; XREF: LOAD:_DYNAMIC/r
                                        ; LOAD:0000000000603E38/r ...
d_tag           dq ?
d_un            dq ?
Elf64_Dyn       ends

; ---------------------------------------------------------------------------

sockaddr        struc ; (sizeof=0x10, align=0x2, copyof_12)
                                        ; XREF: submitr/r
sa_family       dw ?                    ; XREF: submitr:loc_401B63/w
                                        ; submitr+149/w
sa_data         db 14 dup(?)            ; XREF: submitr+140/w
                                        ; submitr+158/o ...
sockaddr        ends


;
; +-------------------------------------------------------------------------+
; |   This file has been generated by The Interactive Disassembler (IDA)    |
; |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
; |                      License info: 48-3FBD-7F04-2C                      |
; |                      Jiang Ying, Personal license                       |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : D8AE5FC849B8DC1FF2AFB12A94CC02B0C04A76A07CE94827670FA57A2287D5EC
; Input MD5    : 7654ACA455C45C93BFB53096173CA113
; Input CRC32  : 570D2ADF

; File Name   : D:\计算机原理与体系结构\HW02\bomblab\bomb
; Format      : ELF64 for x86-64 (Executable)
; Imagebase   : 400000
; Interpreter '/lib64/ld-linux-x86-64.so.2'
; Needed Library 'libc.so.6'
;
; Source File : 'crtstuff.c'
; Source File : 'bomb.c'
; Source File : 'phases.c'
; Source File : 'support.c'
; Source File : 'driverlib.c'
; Source File : 'crtstuff.c'

                .686p
                .mmx
                .model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
LOAD            segment byte public 'CODE' use64
                assume cs:LOAD
                ;org 400000h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_400000    dd 464C457Fh            ; DATA XREF: LOAD:00000000004000C0↓o
                                        ; File format: \x7FELF
                db 2                    ; File class: 64-bit
                db 1                    ; Data encoding: little-endian
                db 1                    ; File version
                db 0                    ; OS/ABI: UNIX System V ABI
                db 0                    ; ABI Version
                db 7 dup(0)             ; Padding
                dw 2                    ; File type: Executable
                dw 3Eh                  ; Machine: x86-64
                dd 1                    ; File version
                dq offset _start        ; Entry point
                dq 40h                  ; PHT file offset
                dq 58F0h                ; SHT file offset
                dd 0                    ; Processor-specific flags
                dw 40h                  ; ELF header size
                dw 38h                  ; PHT entry size
                dw 9                    ; Number of entries in PHT
                dw 40h                  ; SHT entry size
                dw 24h                  ; Number of entries in SHT
                dw 21h                  ; SHT entry index for string table
; ELF64 Program Header
; PHT Entry 0
dword_400040    dd 6                    ; DATA XREF: LOAD:0000000000400050↓o
                                        ; Type: PHDR
                dd 5                    ; Flags
                dq 40h                  ; File offset
                dq offset dword_400040  ; Virtual address
                dq 400040h              ; Physical address
                dq 1F8h                 ; Size in file image
                dq 1F8h                 ; Size in memory image
                dq 8                    ; Alignment
; PHT Entry 1
                dd 3                    ; Type: INTERP
                dd 4                    ; Flags
                dq 238h                 ; File offset
                dq offset aLib64LdLinuxX8 ; Virtual address
                dq 400238h              ; Physical address
                dq 1Ch                  ; Size in file image
                dq 1Ch                  ; Size in memory image
                dq 1                    ; Alignment
; PHT Entry 2
                dd 1                    ; Type: LOAD
                dd 5                    ; Flags
                dq 0                    ; File offset
                dq offset dword_400000  ; Virtual address
                dq 400000h              ; Physical address
                dq 3154h                ; Size in file image
                dq 3154h                ; Size in memory image
                dq 200000h              ; Alignment
; PHT Entry 3
                dd 1                    ; Type: LOAD
                dd 6                    ; Flags
                dq 3E10h                ; File offset
                dq offset __frame_dummy_init_array_entry ; Virtual address
                dq 603E10h              ; Physical address
                dq 990h                 ; Size in file image
                dq 1060h                ; Size in memory image
                dq 200000h              ; Alignment
; PHT Entry 4
                dd 2                    ; Type: DYNAMIC
                dd 6                    ; Flags
                dq 3E28h                ; File offset
                dq offset _DYNAMIC      ; Virtual address
                dq 603E28h              ; Physical address
                dq 1D0h                 ; Size in file image
                dq 1D0h                 ; Size in memory image
                dq 8                    ; Alignment
; PHT Entry 5
                dd 4                    ; Type: NOTE
                dd 4                    ; Flags
                dq 254h                 ; File offset
                dq offset dword_400254  ; Virtual address
                dq 400254h              ; Physical address
                dq 44h                  ; Size in file image
                dq 44h                  ; Size in memory image
                dq 4                    ; Alignment
; PHT Entry 6
                dd 6474E550h            ; Type: EH_FRAME
                dd 4                    ; Flags
                dq 2B54h                ; File offset
                dq offset unk_402B54    ; Virtual address
                dq 402B54h              ; Physical address
                dq 114h                 ; Size in file image
                dq 114h                 ; Size in memory image
                dq 4                    ; Alignment
; PHT Entry 7
                dd 6474E551h            ; Type: STACK
                dd 6                    ; Flags
                dq 0                    ; File offset
                dq 0                    ; Virtual address
                dq 0                    ; Physical address
                dq 0                    ; Size in file image
                dq 0                    ; Size in memory image
                dq 10h                  ; Alignment
; PHT Entry 8
                dd 6474E552h            ; Type: RO-AFTER
                dd 4                    ; Flags
                dq 3E10h                ; File offset
                dq offset __frame_dummy_init_array_entry ; Virtual address
                dq 603E10h              ; Physical address
                dq 1F0h                 ; Size in file image
                dq 1F0h                 ; Size in memory image
                dq 1                    ; Alignment
aLib64LdLinuxX8 db '/lib64/ld-linux-x86-64.so.2',0
                                        ; DATA XREF: LOAD:0000000000400088↑o
dword_400254    dd 4                    ; DATA XREF: LOAD:0000000000400168↑o
                dq 100000010h, 554E47h, 600000002h, 400000018h, 300000014h
                dq 0B7C7ACA300554E47h, 2DE45774CBB5FE28h, 0CCFF610119390255h
; ELF GNU Hash Table
elf_gnu_hash_nbuckets dd 3
elf_gnu_hash_symbias dd 1Fh
elf_gnu_hash_bitmask_nwords dd 1
elf_gnu_hash_shift dd 6
elf_gnu_hash_indexes dq 210018000200100h
elf_gnu_hash_bucket dd 1Fh, 20h, 0
elf_gnu_hash_chain dd 1C8C1D29h, 10615566h, 1C8BF239h
; ELF Symbol Table
                Elf64_Sym <0>
                Elf64_Sym <offset aGetenv - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "getenv"
                Elf64_Sym <offset aStrcasecmp - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "strcasecmp"
                Elf64_Sym <offset aErrnoLocation - offset byte_4005F8, 12h, 0, 0, 0, \ ; "__errno_location"
                           0>
                Elf64_Sym <offset aStrcpy - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "strcpy"
                Elf64_Sym <offset aPuts - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "puts"
                Elf64_Sym <offset aWrite - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "write"
                Elf64_Sym <offset aStackChkFail - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "__stack_chk_fail"
                Elf64_Sym <offset aAlarm - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "alarm"
                Elf64_Sym <offset aClose - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "close"
                Elf64_Sym <offset aRead - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "read"
                Elf64_Sym <offset aLibcStartMain - offset byte_4005F8, 12h, 0, 0, 0, \ ; "__libc_start_main"
                           0>
                Elf64_Sym <offset aFgets - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "fgets"
                Elf64_Sym <offset aSignal - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "signal"
                Elf64_Sym <offset aGethostbyname - offset byte_4005F8, 12h, 0, 0, 0, \ ; "gethostbyname"
                           0>
                Elf64_Sym <offset aMemmoveChk - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "__memmove_chk"
                Elf64_Sym <offset aMemcpyChk - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "__memcpy_chk"
                Elf64_Sym <offset aGmonStart - offset byte_4005F8, 20h, 0, 0, 0, 0> ; "__gmon_start__"
                Elf64_Sym <offset aStrtol - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "strtol"
                Elf64_Sym <offset aFflush - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "fflush"
                Elf64_Sym <offset aIsoc99Sscanf - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "__isoc99_sscanf"
                Elf64_Sym <offset aPrintfChk - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "__printf_chk"
                Elf64_Sym <offset aFopen - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "fopen"
                Elf64_Sym <offset aGethostname - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "gethostname"
                Elf64_Sym <offset aExit - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "exit"
                Elf64_Sym <offset aConnect - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "connect"
                Elf64_Sym <offset aFprintfChk - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "__fprintf_chk"
                Elf64_Sym <offset aSleep - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "sleep"
                Elf64_Sym <offset aCtypeBLoc - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "__ctype_b_loc"
                Elf64_Sym <offset aSprintfChk - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "__sprintf_chk"
                Elf64_Sym <offset aSocket - offset byte_4005F8, 12h, 0, 0, 0, 0> ; "socket"
                Elf64_Sym <offset aStdout - offset byte_4005F8, 11h, 0, 19h, \ ; "stdout"
                           offset __bss_start, 8>
                Elf64_Sym <offset aStdin - offset byte_4005F8, 11h, 0, 19h, \ ; "stdin"
                           offset stdin@@GLIBC_2_2_5, 8>
                Elf64_Sym <offset aStderr - offset byte_4005F8, 11h, 0, 19h, \ ; "stderr"
                           offset stderr@@GLIBC_2_2_5, 8>
; ELF String Table
byte_4005F8     db 0                    ; DATA XREF: LOAD:00000000004002E0↑o
                                        ; LOAD:00000000004002F8↑o ...
aLibcSo6        db 'libc.so.6',0
aSocket         db 'socket',0           ; DATA XREF: LOAD:0000000000400598↑o
aFflush         db 'fflush',0           ; DATA XREF: LOAD:0000000000400490↑o
aStrcpy         db 'strcpy',0           ; DATA XREF: LOAD:0000000000400328↑o
aPrintfChk      db '__printf_chk',0     ; DATA XREF: LOAD:00000000004004C0↑o
aExit           db 'exit',0             ; DATA XREF: LOAD:0000000000400508↑o
aFopen          db 'fopen',0            ; DATA XREF: LOAD:00000000004004D8↑o
aIsoc99Sscanf   db '__isoc99_sscanf',0  ; DATA XREF: LOAD:00000000004004A8↑o
aConnect        db 'connect',0          ; DATA XREF: LOAD:0000000000400520↑o
aSignal         db 'signal',0           ; DATA XREF: LOAD:0000000000400400↑o
aPuts           db 'puts',0             ; DATA XREF: LOAD:0000000000400340↑o
aStackChkFail   db '__stack_chk_fail',0 ; DATA XREF: LOAD:0000000000400370↑o
aStdin          db 'stdin',0            ; DATA XREF: LOAD:00000000004005C8↑o
aStrtol         db 'strtol',0           ; DATA XREF: LOAD:0000000000400478↑o
aFgets          db 'fgets',0            ; DATA XREF: LOAD:00000000004003E8↑o
aErrnoLocation  db '__errno_location',0 ; DATA XREF: LOAD:0000000000400310↑o
aRead           db 'read',0             ; DATA XREF: LOAD:00000000004003B8↑o
aFprintfChk     db '__fprintf_chk',0    ; DATA XREF: LOAD:0000000000400538↑o
aStdout         db 'stdout',0           ; DATA XREF: LOAD:00000000004005B0↑o
aMemmoveChk     db '__memmove_chk',0    ; DATA XREF: LOAD:0000000000400430↑o
aStrcasecmp     db 'strcasecmp',0       ; DATA XREF: LOAD:00000000004002F8↑o
aCtypeBLoc      db '__ctype_b_loc',0    ; DATA XREF: LOAD:0000000000400568↑o
aGetenv         db 'getenv',0           ; DATA XREF: LOAD:00000000004002E0↑o
aStderr         db 'stderr',0           ; DATA XREF: LOAD:00000000004005E0↑o
aAlarm          db 'alarm',0            ; DATA XREF: LOAD:0000000000400388↑o
aGethostbyname  db 'gethostbyname',0    ; DATA XREF: LOAD:0000000000400418↑o
aGethostname    db 'gethostname',0      ; DATA XREF: LOAD:00000000004004F0↑o
aMemcpyChk      db '__memcpy_chk',0     ; DATA XREF: LOAD:0000000000400448↑o
aClose          db 'close',0            ; DATA XREF: LOAD:00000000004003A0↑o
aSleep          db 'sleep',0            ; DATA XREF: LOAD:0000000000400550↑o
aSprintfChk     db '__sprintf_chk',0    ; DATA XREF: LOAD:0000000000400580↑o
aLibcStartMain  db '__libc_start_main',0
                                        ; DATA XREF: LOAD:00000000004003D0↑o
aWrite          db 'write',0            ; DATA XREF: LOAD:0000000000400358↑o
aGmonStart      db '__gmon_start__',0   ; DATA XREF: LOAD:0000000000400460↑o
aGlibc23        db 'GLIBC_2.3',0
aGlibc27        db 'GLIBC_2.7',0
aGlibc234       db 'GLIBC_2.3.4',0
aGlibc24        db 'GLIBC_2.4',0
aGlibc225       db 'GLIBC_2.2.5',0
                dd 20000h
                dq 2000200020002h, 2000200030002h, 2000200020002h, 400040002h
                dq 4000500020002h, 2000200020002h, 4000600020004h, 2000200020002h
                dq 100050001h, 10h, 600000D696913h, 100000014Eh, 500000D696917h
                dq 1000000158h, 4000009691974h, 1000000162h, 300000D696914h
                dq 100000016Eh, 2000009691A75h, 178h
; ELF RELA Relocation Table
                Elf64_Rela <603FF8h, 1100000006h, 0> ; R_X86_64_GLOB_DAT __gmon_start__
                Elf64_Rela <6047A0h, 1F00000005h, 0> ; R_X86_64_COPY stdout
                Elf64_Rela <6047A8h, 2000000005h, 0> ; R_X86_64_COPY stdin
                Elf64_Rela <6047B0h, 2100000005h, 0> ; R_X86_64_COPY stderr
; ELF JMPREL Relocation Table
                Elf64_Rela <604018h, 100000007h, 0> ; R_X86_64_JUMP_SLOT getenv
                Elf64_Rela <604020h, 200000007h, 0> ; R_X86_64_JUMP_SLOT strcasecmp
                Elf64_Rela <604028h, 300000007h, 0> ; R_X86_64_JUMP_SLOT __errno_location
                Elf64_Rela <604030h, 400000007h, 0> ; R_X86_64_JUMP_SLOT strcpy
                Elf64_Rela <604038h, 500000007h, 0> ; R_X86_64_JUMP_SLOT puts
                Elf64_Rela <604040h, 600000007h, 0> ; R_X86_64_JUMP_SLOT write
                Elf64_Rela <604048h, 700000007h, 0> ; R_X86_64_JUMP_SLOT __stack_chk_fail
                Elf64_Rela <604050h, 800000007h, 0> ; R_X86_64_JUMP_SLOT alarm
                Elf64_Rela <604058h, 900000007h, 0> ; R_X86_64_JUMP_SLOT close
                Elf64_Rela <604060h, 0A00000007h, 0> ; R_X86_64_JUMP_SLOT read
                Elf64_Rela <604068h, 0B00000007h, 0> ; R_X86_64_JUMP_SLOT __libc_start_main
                Elf64_Rela <604070h, 0C00000007h, 0> ; R_X86_64_JUMP_SLOT fgets
                Elf64_Rela <604078h, 0D00000007h, 0> ; R_X86_64_JUMP_SLOT signal
                Elf64_Rela <604080h, 0E00000007h, 0> ; R_X86_64_JUMP_SLOT gethostbyname
                Elf64_Rela <604088h, 0F00000007h, 0> ; R_X86_64_JUMP_SLOT __memmove_chk
                Elf64_Rela <604090h, 1000000007h, 0> ; R_X86_64_JUMP_SLOT __memcpy_chk
                Elf64_Rela <604098h, 1100000007h, 0> ; R_X86_64_JUMP_SLOT __gmon_start__
                Elf64_Rela <6040A0h, 1200000007h, 0> ; R_X86_64_JUMP_SLOT strtol
                Elf64_Rela <6040A8h, 1300000007h, 0> ; R_X86_64_JUMP_SLOT fflush
                Elf64_Rela <6040B0h, 1400000007h, 0> ; R_X86_64_JUMP_SLOT __isoc99_sscanf
                Elf64_Rela <6040B8h, 1500000007h, 0> ; R_X86_64_JUMP_SLOT __printf_chk
                Elf64_Rela <6040C0h, 1600000007h, 0> ; R_X86_64_JUMP_SLOT fopen
                Elf64_Rela <6040C8h, 1700000007h, 0> ; R_X86_64_JUMP_SLOT gethostname
                Elf64_Rela <6040D0h, 1800000007h, 0> ; R_X86_64_JUMP_SLOT exit
                Elf64_Rela <6040D8h, 1900000007h, 0> ; R_X86_64_JUMP_SLOT connect
                Elf64_Rela <6040E0h, 1A00000007h, 0> ; R_X86_64_JUMP_SLOT __fprintf_chk
                Elf64_Rela <6040E8h, 1B00000007h, 0> ; R_X86_64_JUMP_SLOT sleep
                Elf64_Rela <6040F0h, 1C00000007h, 0> ; R_X86_64_JUMP_SLOT __ctype_b_loc
                Elf64_Rela <6040F8h, 1D00000007h, 0> ; R_X86_64_JUMP_SLOT __sprintf_chk
                Elf64_Rela <604100h, 1E00000007h, 0> ; R_X86_64_JUMP_SLOT socket
LOAD            ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_init           segment dword public 'CODE' use64
                assume cs:_init
                ;org 400B50h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================


                public _init_proc
_init_proc      proc near               ; CODE XREF: __libc_csu_init+2E↓p
                sub     rsp, 8          ; _init
                mov     rax, cs:__gmon_start___ptr
                test    rax, rax
                jz      short loc_400B65
                call    ___gmon_start__

loc_400B65:                             ; CODE XREF: _init_proc+E↑j
                add     rsp, 8
                retn
_init_proc      endp

_init           ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
LOAD            segment byte public 'CODE' use64
                assume cs:LOAD
                ;org 400B6Ah
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                align 10h
LOAD            ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_plt            segment para public 'CODE' use64
                assume cs:_plt
                ;org 400B70h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================


sub_400B70      proc near               ; CODE XREF: .plt:0000000000400B8B↓j
                                        ; .plt:0000000000400B9B↓j ...
; __unwind {
                push    cs:qword_604008
                jmp     cs:qword_604010
sub_400B70      endp

; ---------------------------------------------------------------------------
                align 20h
; [00000006 BYTES: COLLAPSED FUNCTION _getenv. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    0
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _strcasecmp. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    1
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___errno_location. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    2
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _strcpy. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    3
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _puts. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    4
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _write. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    5
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___stack_chk_fail. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    6
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _alarm. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    7
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _close. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    8
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _read. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    9
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___libc_start_main. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    0Ah
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _fgets. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    0Bh
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _signal. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    0Ch
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _gethostbyname. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    0Dh
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___memmove_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    0Eh
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___memcpy_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    0Fh
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___gmon_start__. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    10h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _strtol. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    11h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _fflush. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    12h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___isoc99_sscanf. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    13h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___printf_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    14h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _fopen. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    15h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _gethostname. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    16h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _exit. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    17h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _connect. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    18h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___fprintf_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    19h
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _sleep. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    1Ah
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___ctype_b_loc. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    1Bh
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION ___sprintf_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    1Ch
                jmp     sub_400B70
; [00000006 BYTES: COLLAPSED FUNCTION _socket. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
                push    1Dh
                jmp     sub_400B70
; } // starts at 400B70
_plt            ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_text           segment para public 'CODE' use64
                assume cs:_text
                ;org 400D60h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

                public _start
_start          proc near               ; DATA XREF: LOAD:0000000000400018↑o
; __unwind {
                xor     ebp, ebp
                mov     r9, rdx         ; rtld_fini
                pop     rsi             ; argc
                mov     rdx, rsp        ; ubp_av
                and     rsp, 0FFFFFFFFFFFFFFF0h
                push    rax
                push    rsp             ; stack_end
                mov     r8, offset __libc_csu_fini ; fini
                mov     rcx, offset __libc_csu_init ; init
                mov     rdi, offset main ; main
                call    ___libc_start_main
                hlt
; } // starts at 400D60
_start          endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

deregister_tm_clones proc near          ; CODE XREF: __do_global_dtors_aux+D↓p
                mov     eax, 6047A7h
                push    rbp
                sub     rax, offset __bss_start
                cmp     rax, 0Eh
                mov     rbp, rsp
                ja      short loc_400DA7

loc_400DA5:                             ; CODE XREF: deregister_tm_clones+1F↓j
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_400DA7:                             ; CODE XREF: deregister_tm_clones+13↑j
                mov     eax, 0
                test    rax, rax
                jz      short loc_400DA5
                pop     rbp
                mov     edi, offset __bss_start
                jmp     rax
deregister_tm_clones endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

register_tm_clones proc near            ; CODE XREF: frame_dummy+20↓j
                                        ; frame_dummy:loc_400E48↓j
                mov     eax, offset __bss_start
                push    rbp
                sub     rax, offset __bss_start
                sar     rax, 3
                mov     rbp, rsp
                mov     rdx, rax
                shr     rdx, 3Fh
                add     rax, rdx
                sar     rax, 1
                jnz     short loc_400DE4

loc_400DE2:                             ; CODE XREF: register_tm_clones+2C↓j
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_400DE4:                             ; CODE XREF: register_tm_clones+20↑j
                mov     edx, 0
                test    rdx, rdx
                jz      short loc_400DE2
                pop     rbp
                mov     rsi, rax
                mov     edi, offset __bss_start
                jmp     rdx
register_tm_clones endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


__do_global_dtors_aux proc near         ; DATA XREF: .fini_array:__do_global_dtors_aux_fini_array_entry↓o
                cmp     cs:completed_6982, 0
                jnz     short locret_400E1A
                push    rbp
                mov     rbp, rsp
                call    deregister_tm_clones
                pop     rbp
                mov     cs:completed_6982, 1

locret_400E1A:                          ; CODE XREF: __do_global_dtors_aux+7↑j
                rep retn
__do_global_dtors_aux endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


frame_dummy     proc near               ; DATA XREF: .init_array:__frame_dummy_init_array_entry↓o
                cmp     cs:__JCR_LIST__, 0
                jz      short loc_400E48
                mov     eax, 0
                test    rax, rax
                jz      short loc_400E48
                push    rbp
                mov     edi, offset __JCR_LIST__
                mov     rbp, rsp
                call    rax
                pop     rbp
                jmp     register_tm_clones
; ---------------------------------------------------------------------------
                align 8

loc_400E48:                             ; CODE XREF: frame_dummy+8↑j
                                        ; frame_dummy+12↑j
                jmp     register_tm_clones
frame_dummy     endp


; =============== S U B R O U T I N E =======================================


; int __cdecl main(int argc, const char **argv, const char **envp)
                public main
main            proc near               ; DATA XREF: _start+1D↑o
argc = rdi                              ; int
argv = rsi                              ; char **
; __unwind {
                push    rbx
                cmp     edi, 1
                jnz     short loc_400E63
                mov     rax, cs:stdin@@GLIBC_2_2_5
                mov     cs:infile, rax
                jmp     short loc_400EC6
; ---------------------------------------------------------------------------

loc_400E63:                             ; CODE XREF: main+4↑j
                mov     rbx, argv
                cmp     edi, 2
                jnz     short loc_400EA5
argv = rbx                              ; char **
                mov     argc, [rsi+8]   ; filename
                mov     esi, offset modes ; "r"
                call    _fopen
                mov     cs:infile, rax
                test    rax, rax
                jnz     short loc_400EC6
                mov     rcx, [argv+8]
                mov     rdx, [argv]
                mov     esi, offset aSErrorCouldnTO ; "%s: Error: Couldn't open %s\n"
                mov     edi, 1
                call    ___printf_chk
                mov     edi, 8          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_400EA5:                             ; CODE XREF: main+1C↑j
argc = rdi                              ; int
                mov     rdx, [rsi]
                mov     esi, offset aUsageSInputFil ; "Usage: %s [<input_file>]\n"
                mov     edi, 1
                mov     eax, 0
                call    ___printf_chk
                mov     edi, 8          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_400EC6:                             ; CODE XREF: main+14↑j
                                        ; main+36↑j
                call    initialize_bomb
                mov     edi, offset s   ; "Welcome to my fiendish little bomb. You"...
                call    _puts
                mov     edi, offset aWhichToBlowYou ; "which to blow yourself up. Have a nice "...
                call    _puts
                call    read_line
input = rax                             ; char *
                mov     rdi, input
                call    phase_1
                call    phase_defused
                mov     edi, offset aPhase1DefusedH ; "Phase 1 defused. How about the next one"...
                call    _puts
                call    read_line
input = rax                             ; char *
                mov     rdi, input
                call    phase_2
                call    phase_defused
                mov     edi, offset aThatSNumber2Ke ; "That's number 2.  Keep going!"
                call    _puts
                call    read_line
input = rax                             ; char *
                mov     rdi, input
                call    phase_3
                call    phase_defused
                mov     edi, offset aHalfwayThere ; "Halfway there!"
                call    _puts
                call    read_line
input = rax                             ; char *
                mov     rdi, input
                call    phase_4
                call    phase_defused
                mov     edi, offset aSoYouGotThatOn ; "So you got that one.  Try this one."
                call    _puts
                call    read_line
input = rax                             ; char *
                mov     rdi, input
                call    phase_5
                call    phase_defused
                mov     edi, offset aGoodWorkOnToTh ; "Good work!  On to the next..."
                call    _puts
                call    read_line
input = rax                             ; char *
                mov     rdi, input
                call    phase_6
                call    phase_defused
                mov     eax, 0
                pop     rbx
                retn
; } // starts at 400E4D
main            endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


                public phase_1
phase_1         proc near               ; CODE XREF: main+9A↑p
; __unwind {
                sub     rsp, 8
                mov     esi, offset aForNasaSpaceIs ; "For NASA, space is still a high priorit"...
                call    strings_not_equal
                test    eax, eax
                jz      short loc_400FA7
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_400FA7:                             ; CODE XREF: phase_1+10↑j
                add     rsp, 8
                retn
; } // starts at 400F90
phase_1         endp


; =============== S U B R O U T I N E =======================================


                public phase_2
phase_2         proc near               ; CODE XREF: main+B6↑p

var_38          = dword ptr -38h
var_34          = byte ptr -34h

; __unwind {
                push    rbp
                push    rbx
                sub     rsp, 28h
                mov     rsi, rsp
                call    read_six_numbers
                cmp     [rsp+38h+var_38], 0
                jns     short loc_400FE4
                call    explode_bomb
; ---------------------------------------------------------------------------
                jmp     short loc_400FE4
; ---------------------------------------------------------------------------

loc_400FC7:                             ; CODE XREF: phase_2+34↓j
                                        ; phase_2+42↓j
                mov     eax, ebx
                add     eax, [rbp-4]
                cmp     [rbp+0], eax
                jz      short loc_400FD6
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_400FD6:                             ; CODE XREF: phase_2+23↑j
                add     ebx, 1
                add     rbp, 4
                cmp     ebx, 6
                jnz     short loc_400FC7
                jmp     short loc_400FF0
; ---------------------------------------------------------------------------

loc_400FE4:                             ; CODE XREF: phase_2+12↑j
                                        ; phase_2+19↑j
                lea     rbp, [rsp+38h+var_34]
                mov     ebx, 1
                jmp     short loc_400FC7
; ---------------------------------------------------------------------------

loc_400FF0:                             ; CODE XREF: phase_2+36↑j
                add     rsp, 28h
                pop     rbx
                pop     rbp
                retn
; } // starts at 400FAC
phase_2         endp


; =============== S U B R O U T I N E =======================================


                public phase_3
phase_3         proc near               ; CODE XREF: main+D2↑p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch

; __unwind {
                sub     rsp, 18h
                lea     rcx, [rsp+18h+var_C]
                lea     rdx, [rsp+18h+var_10]
                mov     esi, offset aDD ; "%d %d"
                mov     eax, 0
                call    ___isoc99_sscanf
                cmp     eax, 1
                jg      short loc_40101E
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_40101E:                             ; CODE XREF: phase_3+20↑j
                cmp     [rsp+18h+var_10], 7 ; switch 8 cases
                ja      short loc_40108B ; jumptable 0000000000401029 default case
                mov     eax, [rsp+18h+var_10]
                jmp     ds:off_402700[rax*8] ; switch jump
; ---------------------------------------------------------------------------

loc_401030:                             ; CODE XREF: phase_3+32↑j
                                        ; DATA XREF: .rodata:off_402700↓o
                mov     eax, 0          ; jumptable 0000000000401029 case 1
                jmp     short loc_40103C
; ---------------------------------------------------------------------------

loc_401037:                             ; CODE XREF: phase_3+32↑j
                                        ; DATA XREF: .rodata:off_402700↓o
                mov     eax, 37Dh       ; jumptable 0000000000401029 case 0

loc_40103C:                             ; CODE XREF: phase_3+3E↑j
                sub     eax, 0FDh
                jmp     short loc_401048
; ---------------------------------------------------------------------------

loc_401043:                             ; CODE XREF: phase_3+32↑j
                                        ; DATA XREF: .rodata:off_402700↓o
                mov     eax, 0          ; jumptable 0000000000401029 case 2

loc_401048:                             ; CODE XREF: phase_3+4A↑j
                add     eax, 20Ch
                jmp     short loc_401054
; ---------------------------------------------------------------------------

loc_40104F:                             ; CODE XREF: phase_3+32↑j
                                        ; DATA XREF: .rodata:off_402700↓o
                mov     eax, 0          ; jumptable 0000000000401029 case 3

loc_401054:                             ; CODE XREF: phase_3+56↑j
                sub     eax, 19Ch
                jmp     short loc_401060
; ---------------------------------------------------------------------------

loc_40105B:                             ; CODE XREF: phase_3+32↑j
                                        ; DATA XREF: .rodata:off_402700↓o
                mov     eax, 0          ; jumptable 0000000000401029 case 4

loc_401060:                             ; CODE XREF: phase_3+62↑j
                add     eax, 19Ch
                jmp     short loc_40106C
; ---------------------------------------------------------------------------

loc_401067:                             ; CODE XREF: phase_3+32↑j
                                        ; DATA XREF: .rodata:off_402700↓o
                mov     eax, 0          ; jumptable 0000000000401029 case 5

loc_40106C:                             ; CODE XREF: phase_3+6E↑j
                sub     eax, 19Ch
                jmp     short loc_401078
; ---------------------------------------------------------------------------

loc_401073:                             ; CODE XREF: phase_3+32↑j
                                        ; DATA XREF: .rodata:off_402700↓o
                mov     eax, 0          ; jumptable 0000000000401029 case 6

loc_401078:                             ; CODE XREF: phase_3+7A↑j
                add     eax, 19Ch
                jmp     short loc_401084
; ---------------------------------------------------------------------------

loc_40107F:                             ; CODE XREF: phase_3+32↑j
                                        ; DATA XREF: .rodata:off_402700↓o
                mov     eax, 0          ; jumptable 0000000000401029 case 7

loc_401084:                             ; CODE XREF: phase_3+86↑j
                sub     eax, 19Ch
                jmp     short loc_401095
; ---------------------------------------------------------------------------

loc_40108B:                             ; CODE XREF: phase_3+2C↑j
                call    explode_bomb    ; jumptable 0000000000401029 default case
; ---------------------------------------------------------------------------
                mov     eax, 0

loc_401095:                             ; CODE XREF: phase_3+92↑j
                cmp     [rsp+18h+var_10], 5
                jg      short loc_4010A2
                cmp     eax, [rsp+18h+var_C]
                jz      short loc_4010A7

loc_4010A2:                             ; CODE XREF: phase_3+A3↑j
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_4010A7:                             ; CODE XREF: phase_3+A9↑j
                add     rsp, 18h
                retn
; } // starts at 400FF7
phase_3         endp


; =============== S U B R O U T I N E =======================================


                public func4
func4           proc near               ; CODE XREF: func4+16↓p
                                        ; func4+24↓p ...
; __unwind {
                push    r12
                push    rbp
                push    rbx
                mov     ebx, edi
                test    edi, edi
                jle     short loc_4010DA
                mov     ebp, esi
                mov     eax, esi
                cmp     edi, 1
                jz      short loc_4010DF
                lea     edi, [rdi-1]
                call    func4
                lea     r12d, [rax+rbp]
                lea     edi, [rbx-2]
                mov     esi, ebp
                call    func4
                add     eax, r12d
                jmp     short loc_4010DF
; ---------------------------------------------------------------------------

loc_4010DA:                             ; CODE XREF: func4+8↑j
                mov     eax, 0

loc_4010DF:                             ; CODE XREF: func4+11↑j
                                        ; func4+2C↑j
                pop     rbx
                pop     rbp
                pop     r12
                retn
; } // starts at 4010AC
func4           endp


; =============== S U B R O U T I N E =======================================


                public phase_4
phase_4         proc near               ; CODE XREF: main+EE↑p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch

; __unwind {
                sub     rsp, 18h
                lea     rcx, [rsp+18h+var_10]
                lea     rdx, [rsp+18h+var_C]
                mov     esi, offset aDD ; "%d %d"
                mov     eax, 0
                call    ___isoc99_sscanf
                cmp     eax, 2
                jnz     short loc_401112
                mov     eax, [rsp+18h+var_10]
                sub     eax, 2
                cmp     eax, 2
                jbe     short loc_401117

loc_401112:                             ; CODE XREF: phase_4+20↑j
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_401117:                             ; CODE XREF: phase_4+2C↑j
                mov     esi, [rsp+18h+var_10]
                mov     edi, 6
                call    func4
                cmp     eax, [rsp+18h+var_C]
                jz      short loc_401130
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_401130:                             ; CODE XREF: phase_4+45↑j
                add     rsp, 18h
                retn
; } // starts at 4010E4
phase_4         endp


; =============== S U B R O U T I N E =======================================


                public phase_5
phase_5         proc near               ; CODE XREF: main+10A↑p
; __unwind {
                push    rbx
                mov     rbx, rdi
                call    string_length
                cmp     eax, 6
                jz      short loc_401148
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_401148:                             ; CODE XREF: phase_5+C↑j
                mov     eax, 0
                mov     edx, 0

loc_401152:                             ; CODE XREF: phase_5+33↓j
                movzx   ecx, byte ptr [rbx+rax]
                and     ecx, 0Fh
                add     edx, ds:array_3493[rcx*4]
                add     rax, 1
                cmp     rax, 6
                jnz     short loc_401152
                cmp     edx, 37h
                jz      short loc_401174
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_401174:                             ; CODE XREF: phase_5+38↑j
                pop     rbx
                retn
; } // starts at 401135
phase_5         endp


; =============== S U B R O U T I N E =======================================


                public phase_6
phase_6         proc near               ; CODE XREF: main+126↑p

var_78          = dword ptr -78h
var_60          = byte ptr -60h
var_58          = qword ptr -58h
var_50          = byte ptr -50h
var_28          = byte ptr -28h

; __unwind {
                push    r14
                push    r13
                push    r12
                push    rbp
                push    rbx
                sub     rsp, 50h
                mov     r13, rsp
                mov     rsi, rsp
                call    read_six_numbers
                mov     r14, rsp
                mov     r12d, 0

loc_401196:                             ; CODE XREF: phase_6+5D↓j
                mov     rbp, r13
                mov     eax, [r13+0]
                sub     eax, 1
                cmp     eax, 5
                jbe     short loc_4011AA
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_4011AA:                             ; CODE XREF: phase_6+2D↑j
                add     r12d, 1
                cmp     r12d, 6
                jz      short loc_4011D5
                mov     ebx, r12d

loc_4011B7:                             ; CODE XREF: phase_6+57↓j
                movsxd  rax, ebx
                mov     eax, [rsp+rax*4+78h+var_78]
                cmp     [rbp+0], eax
                jnz     short loc_4011C7
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_4011C7:                             ; CODE XREF: phase_6+4A↑j
                add     ebx, 1
                cmp     ebx, 5
                jle     short loc_4011B7
                add     r13, 4
                jmp     short loc_401196
; ---------------------------------------------------------------------------

loc_4011D5:                             ; CODE XREF: phase_6+3C↑j
                lea     rsi, [rsp+78h+var_60]
                mov     rax, r14
                mov     ecx, 7

loc_4011E2:                             ; CODE XREF: phase_6+79↓j
                mov     edx, ecx
                sub     edx, [rax]
                mov     [rax], edx
                add     rax, 4
                cmp     rax, rsi
                jnz     short loc_4011E2
                mov     esi, 0
                jmp     short loc_401219
; ---------------------------------------------------------------------------

loc_4011F8:                             ; CODE XREF: phase_6+8B↓j
                                        ; phase_6+B5↓j
                mov     rdx, [rdx+8]
                add     eax, 1
                cmp     eax, ecx
                jnz     short loc_4011F8
                jmp     short loc_40120A
; ---------------------------------------------------------------------------

loc_401205:                             ; CODE XREF: phase_6+A9↓j
                mov     edx, offset node1

loc_40120A:                             ; CODE XREF: phase_6+8D↑j
                mov     [rsp+rsi*2+78h+var_58], rdx
                add     rsi, 4
                cmp     rsi, 18h
                jz      short loc_40122D

loc_401219:                             ; CODE XREF: phase_6+80↑j
                mov     ecx, [rsp+rsi+78h+var_78]
                cmp     ecx, 1
                jle     short loc_401205
                mov     eax, 1
                mov     edx, offset node1
                jmp     short loc_4011F8
; ---------------------------------------------------------------------------

loc_40122D:                             ; CODE XREF: phase_6+A1↑j
                mov     rbx, [rsp+78h+var_58]
                lea     rax, [rsp+78h+var_50]
                lea     rsi, [rsp+78h+var_28]
                mov     rcx, rbx

loc_40123F:                             ; CODE XREF: phase_6+DC↓j
                mov     rdx, [rax]
                mov     [rcx+8], rdx
                add     rax, 8
                cmp     rax, rsi
                jz      short loc_401254
                mov     rcx, rdx
                jmp     short loc_40123F
; ---------------------------------------------------------------------------

loc_401254:                             ; CODE XREF: phase_6+D7↑j
                mov     qword ptr [rdx+8], 0
                mov     ebp, 5

loc_401261:                             ; CODE XREF: phase_6+101↓j
                mov     rax, [rbx+8]
                mov     eax, [rax]
                cmp     [rbx], eax
                jge     short loc_401270
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_401270:                             ; CODE XREF: phase_6+F3↑j
                mov     rbx, [rbx+8]
                sub     ebp, 1
                jnz     short loc_401261
                add     rsp, 50h
                pop     rbx
                pop     rbp
                pop     r12
                pop     r13
                pop     r14
                retn
; } // starts at 401176
phase_6         endp


; =============== S U B R O U T I N E =======================================


                public fun7
fun7            proc near               ; CODE XREF: fun7+13↓p
                                        ; fun7+29↓p ...
; __unwind {
                sub     rsp, 8
                test    rdi, rdi
                jz      short loc_4012BA
                mov     edx, [rdi]
                cmp     edx, esi
                jle     short loc_4012A2
                mov     rdi, [rdi+8]
                call    fun7
                add     eax, eax
                jmp     short loc_4012BF
; ---------------------------------------------------------------------------

loc_4012A2:                             ; CODE XREF: fun7+D↑j
                mov     eax, 0
                cmp     edx, esi
                jz      short loc_4012BF
                mov     rdi, [rdi+10h]
                call    fun7
                lea     eax, [rax+rax+1]
                jmp     short loc_4012BF
; ---------------------------------------------------------------------------

loc_4012BA:                             ; CODE XREF: fun7+7↑j
                mov     eax, 0FFFFFFFFh

loc_4012BF:                             ; CODE XREF: fun7+1A↑j
                                        ; fun7+23↑j ...
                add     rsp, 8
                retn
; } // starts at 401286
fun7            endp


; =============== S U B R O U T I N E =======================================


                public secret_phase
secret_phase    proc near               ; CODE XREF: phase_defused+7B↓p
; __unwind {
                push    rbx
                call    read_line
                mov     edx, 0Ah        ; base
                mov     esi, 0          ; endptr
                mov     rdi, rax        ; nptr
                call    _strtol
                mov     rbx, rax
                lea     eax, [rax-1]
                cmp     eax, 3E8h
                jbe     short loc_4012EE
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_4012EE:                             ; CODE XREF: secret_phase+23↑j
                mov     esi, ebx
                mov     edi, offset n1
                call    fun7
                cmp     eax, 5
                jz      short loc_401304
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_401304:                             ; CODE XREF: secret_phase+39↑j
                mov     edi, offset aWowYouVeDefuse ; "Wow! You've defused the secret stage!"
                call    _puts
                call    phase_defused
                pop     rbx
                retn
; } // starts at 4012C4
secret_phase    endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

; void sig_handler(int)
sig_handler     proc near               ; DATA XREF: initialize_bomb+1B↓o
; __unwind {
                sub     rsp, 8
                mov     edi, offset aSoYouThinkYouC ; "So you think you can stop the bomb with"...
                call    _puts
                mov     edi, 3          ; seconds
                call    _sleep
                mov     esi, offset aWell ; "Well..."
                mov     edi, 1
                mov     eax, 0
                call    ___printf_chk
                mov     rdi, cs:__bss_start ; stream
                call    _fflush
                mov     edi, 1          ; seconds
                call    _sleep
                mov     edi, offset aOk ; "OK. :-)"
                call    _puts
                mov     edi, 10h        ; status
                call    _exit
; } // starts at 401320
sig_handler     endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

                public invalid_phase
invalid_phase   proc near
; __unwind {
                sub     rsp, 8
                mov     rdx, rdi
                mov     esi, offset aInvalidPhaseS ; "Invalid phase%s\n"
                mov     edi, 1
                mov     eax, 0
                call    ___printf_chk
                mov     edi, 8          ; status
                call    _exit
; } // starts at 401376
invalid_phase   endp


; =============== S U B R O U T I N E =======================================


                public string_length
string_length   proc near               ; CODE XREF: phase_5+4↑p
                                        ; strings_not_equal+A↓p ...
; __unwind {
                cmp     byte ptr [rdi], 0
                jz      short loc_4013B2
                mov     rdx, rdi

loc_4013A3:                             ; CODE XREF: string_length+13↓j
                add     rdx, 1
                mov     eax, edx
                sub     eax, edi
                cmp     byte ptr [rdx], 0
                jnz     short loc_4013A3
                rep retn
; ---------------------------------------------------------------------------

loc_4013B2:                             ; CODE XREF: string_length+3↑j
                mov     eax, 0
                retn
; } // starts at 40139B
string_length   endp


; =============== S U B R O U T I N E =======================================


                public strings_not_equal
strings_not_equal proc near             ; CODE XREF: phase_1+9↑p
                                        ; phase_defused+59↓p
; __unwind {
                push    r12
                push    rbp
                push    rbx
                mov     rbx, rdi
                mov     rbp, rsi
                call    string_length
                mov     r12d, eax
                mov     rdi, rbp
                call    string_length
                mov     edx, 1
                cmp     r12d, eax
                jnz     short loc_40141B
                movzx   eax, byte ptr [rbx]
                test    al, al
                jz      short loc_401408
                cmp     al, [rbp+0]
                jz      short loc_4013F2
                jmp     short loc_40140F
; ---------------------------------------------------------------------------

loc_4013EA:                             ; CODE XREF: strings_not_equal+47↓j
                cmp     al, [rbp+0]
                nop     dword ptr [rax]
                jnz     short loc_401416

loc_4013F2:                             ; CODE XREF: strings_not_equal+2E↑j
                add     rbx, 1
                add     rbp, 1
                movzx   eax, byte ptr [rbx]
                test    al, al
                jnz     short loc_4013EA
                mov     edx, 0
                jmp     short loc_40141B
; ---------------------------------------------------------------------------

loc_401408:                             ; CODE XREF: strings_not_equal+29↑j
                mov     edx, 0
                jmp     short loc_40141B
; ---------------------------------------------------------------------------

loc_40140F:                             ; CODE XREF: strings_not_equal+30↑j
                mov     edx, 1
                jmp     short loc_40141B
; ---------------------------------------------------------------------------

loc_401416:                             ; CODE XREF: strings_not_equal+38↑j
                mov     edx, 1

loc_40141B:                             ; CODE XREF: strings_not_equal+22↑j
                                        ; strings_not_equal+4E↑j ...
                mov     eax, edx
                pop     rbx
                pop     rbp
                pop     r12
                retn
; } // starts at 4013B8
strings_not_equal endp


; =============== S U B R O U T I N E =======================================


                public initialize_bomb
initialize_bomb proc near               ; CODE XREF: main:loc_400EC6↑p

var_2018        = byte ptr -2018h
var_10          = qword ptr -10h

; __unwind {
                push    rbx
                sub     rsp, 2050h
                mov     rax, fs:28h
                mov     [rsp+2058h+var_10], rax
                xor     eax, eax
                mov     esi, offset sig_handler ; handler
                mov     edi, 2          ; sig
                call    _signal
                mov     esi, 40h        ; len
                mov     rdi, rsp        ; name
                call    _gethostname
                test    eax, eax
                jnz     short loc_401470
                mov     rdi, cs:host_table ; s1
                mov     ebx, offset unk_6043A8
                test    rdi, rdi
                jnz     short loc_401484
                jmp     short loc_4014C2
; ---------------------------------------------------------------------------

loc_401470:                             ; CODE XREF: initialize_bomb+39↑j
                mov     edi, offset aInitialization ; "Initialization error: Running on an ill"...
                call    _puts
                mov     edi, 8          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_401484:                             ; CODE XREF: initialize_bomb+4A↑j
                                        ; initialize_bomb+79↓j
                mov     rsi, rsp        ; s2
                call    _strcasecmp
                test    eax, eax
                jz      short loc_4014D6
                add     rbx, 8
                mov     rdi, [rbx-8]
                test    rdi, rdi
                jnz     short loc_401484
                jmp     short loc_4014C2
; ---------------------------------------------------------------------------

loc_40149F:                             ; CODE XREF: initialize_bomb+C0↓j
                lea     rdx, [rsp+2058h+var_2018]
                mov     esi, offset aInitialization_0 ; "Initialization error:\n%s\n"
                mov     edi, 1
                mov     eax, 0
                call    ___printf_chk
                mov     edi, 8          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_4014C2:                             ; CODE XREF: initialize_bomb+4C↑j
                                        ; initialize_bomb+7B↑j
                mov     edi, offset aInitialization_1 ; "Initialization error: Running on an ill"...
                call    _puts
                mov     edi, 8          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_4014D6:                             ; CODE XREF: initialize_bomb+6C↑j
                lea     rdi, [rsp+2058h+var_2018]
                call    init_driver
                test    eax, eax
                js      short loc_40149F
                mov     rax, [rsp+2058h+var_10]
                xor     rax, fs:28h
                jz      short loc_4014FC
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_4014FC:                             ; CODE XREF: initialize_bomb+D3↑j
                add     rsp, 2050h
                pop     rbx
                retn
; } // starts at 401422
initialize_bomb endp


; =============== S U B R O U T I N E =======================================


                public initialize_bomb_solve
initialize_bomb_solve proc near
; __unwind {
                rep retn
; } // starts at 401505
initialize_bomb_solve endp


; =============== S U B R O U T I N E =======================================


                public blank_line
blank_line      proc near               ; CODE XREF: skip+33↓p
; __unwind {
                push    rbp
                push    rbx
                sub     rsp, 8
                mov     rbx, rdi
                jmp     short loc_401529
; ---------------------------------------------------------------------------

loc_401512:                             ; CODE XREF: blank_line+28↓j
                call    ___ctype_b_loc
                add     rbx, 1
                movsx   rbp, bpl
                mov     rax, [rax]
                test    byte ptr [rax+rbp*2+1], 20h
                jz      short loc_401538

loc_401529:                             ; CODE XREF: blank_line+9↑j
                movzx   ebp, byte ptr [rbx]
                test    bpl, bpl
                jnz     short loc_401512
                mov     eax, 1
                jmp     short loc_40153D
; ---------------------------------------------------------------------------

loc_401538:                             ; CODE XREF: blank_line+20↑j
                mov     eax, 0

loc_40153D:                             ; CODE XREF: blank_line+2F↑j
                add     rsp, 8
                pop     rbx
                pop     rbp
                retn
; } // starts at 401507
blank_line      endp


; =============== S U B R O U T I N E =======================================


                public skip
skip            proc near               ; CODE XREF: read_line+9↓p
                                        ; read_line+63↓p
; __unwind {
                push    rbx

loc_401545:                             ; CODE XREF: skip+3A↓j
                movsxd  rax, cs:num_input_strings
                lea     rdi, [rax+rax*4]
                shl     rdi, 4
                add     rdi, 6047E0h    ; s
                mov     rdx, cs:infile  ; stream
                mov     esi, 50h        ; n
                call    _fgets
                mov     rbx, rax
                test    rax, rax
                jz      short loc_401580
                mov     rdi, rax
                call    blank_line
                test    eax, eax
                jnz     short loc_401545

loc_401580:                             ; CODE XREF: skip+2E↑j
                mov     rax, rbx
                pop     rbx
                retn
; } // starts at 401544
skip            endp


; =============== S U B R O U T I N E =======================================


                public send_msg
send_msg        proc near               ; CODE XREF: explode_bomb+1D↓p
                                        ; phase_defused+19↓p

var_4028        = dword ptr -4028h
var_4020        = qword ptr -4020h
var_4018        = byte ptr -4018h
s               = byte ptr -2018h
var_10          = qword ptr -10h

; __unwind {
                sub     rsp, 4028h
                mov     r9d, edi
                mov     rax, fs:28h
                mov     [rsp+4028h+var_10], rax
                xor     eax, eax
                mov     esi, cs:num_input_strings
                lea     eax, [rsi-1]
                cdqe
                lea     r8, [rax+rax*4]
                shl     r8, 4
                add     r8, 6047E0h
                mov     rdi, r8
                mov     eax, 0
                mov     rcx, 0FFFFFFFFFFFFFFFFh
                repne scasb
                not     rcx
                add     rcx, 63h
                cmp     rcx, 2000h
                jbe     short loc_4015F6
                mov     esi, offset aErrorInputStri ; "ERROR: Input string is too large."
                mov     edi, 1
                call    ___printf_chk
                mov     edi, 8          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_4015F6:                             ; CODE XREF: send_msg+56↑j
                test    r9d, r9d
                mov     eax, offset aDefused ; "defused"
                mov     r9d, offset aExploded ; "exploded"
                cmovnz  r9, rax
                mov     [rsp+4028h+var_4020], r8
                mov     [rsp+4028h+var_4028], esi
                mov     r8d, cs:bomb_id
                mov     ecx, offset aDSDS ; "%d:%s:%d:%s"
                mov     edx, 2000h
                mov     esi, 1
                lea     rdi, [rsp+4028h+var_4018]
                mov     eax, 0
                call    ___sprintf_chk
                lea     r8, [rsp+4028h+s]
                mov     ecx, 0
                lea     rdx, [rsp+4028h+var_4018]
                mov     esi, offset user_password ; "N0YVLkjiKSpwvj6QrGK6"
                mov     edi, offset userid ; "16307130006"
                call    driver_post
                test    eax, eax
                jns     short loc_401671
                lea     rdi, [rsp+4028h+s] ; s
                call    _puts
                mov     edi, 0          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_401671:                             ; CODE XREF: send_msg+D3↑j
                mov     rax, [rsp+4028h+var_10]
                xor     rax, fs:28h
                jz      short loc_401689
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_401689:                             ; CODE XREF: send_msg+FD↑j
                add     rsp, 4028h
                retn
; } // starts at 401585
send_msg        endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

                public explode_bomb
explode_bomb    proc near               ; CODE XREF: phase_1+12↑p
                                        ; phase_2+14↑p ...
; __unwind {
                sub     rsp, 8
                mov     edi, offset aBoom ; "\nBOOM!!!"
                call    _puts
                mov     edi, offset aTheBombHasBlow ; "The bomb has blown up."
                call    _puts
                mov     edi, 0
                call    send_msg
                mov     edi, offset aYourInstructor ; "Your instructor has been notified."
                call    _puts
                mov     edi, 8          ; status
                call    _exit
; } // starts at 401691
explode_bomb    endp


; =============== S U B R O U T I N E =======================================


                public read_six_numbers
read_six_numbers proc near              ; CODE XREF: phase_2+9↑p
                                        ; phase_6+12↑p

var_18          = qword ptr -18h
var_10          = qword ptr -10h

; __unwind {
                sub     rsp, 18h
                mov     rdx, rsi
                lea     rcx, [rsi+4]
                lea     rax, [rsi+14h]
                mov     [rsp+18h+var_10], rax
                lea     rax, [rsi+10h]
                mov     [rsp+18h+var_18], rax
                lea     r9, [rsi+0Ch]
                lea     r8, [rsi+8]
                mov     esi, offset unk_4029C1
                mov     eax, 0
                call    ___isoc99_sscanf
                cmp     eax, 5
                jg      short loc_401704
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_401704:                             ; CODE XREF: read_six_numbers+36↑j
                add     rsp, 18h
                retn
; } // starts at 4016C7
read_six_numbers endp


; =============== S U B R O U T I N E =======================================


                public read_line
read_line       proc near               ; CODE XREF: main+92↑p
                                        ; main+AE↑p ...
; __unwind {
                sub     rsp, 8
                mov     eax, 0
                call    skip
                test    rax, rax
                jnz     short loc_40178A
                mov     rax, cs:stdin@@GLIBC_2_2_5
                cmp     cs:infile, rax
                jnz     short loc_401740
                mov     edi, offset aErrorPremature ; "Error: Premature EOF on stdin"
                call    _puts
                mov     edi, 8          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_401740:                             ; CODE XREF: read_line+21↑j
                mov     edi, offset name ; "GRADE_BOMB"
                call    _getenv
                test    rax, rax
                jz      short loc_401759
                mov     edi, 0          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_401759:                             ; CODE XREF: read_line+44↑j
                mov     rax, cs:stdin@@GLIBC_2_2_5
                mov     cs:infile, rax
                mov     eax, 0
                call    skip
                test    rax, rax
                jnz     short loc_40178A
                mov     edi, offset aErrorPremature ; "Error: Premature EOF on stdin"
                call    _puts
                mov     edi, 0          ; status
                call    _exit
; ---------------------------------------------------------------------------

loc_40178A:                             ; CODE XREF: read_line+11↑j
                                        ; read_line+6B↑j
                mov     edx, cs:num_input_strings
                movsxd  rax, edx
                lea     rsi, [rax+rax*4]
                shl     rsi, 4
                add     rsi, 6047E0h
                mov     rdi, rsi
                mov     eax, 0
                mov     rcx, 0FFFFFFFFFFFFFFFFh
                repne scasb
                not     rcx
                sub     rcx, 1
                cmp     ecx, 4Eh
                jle     short loc_401805
                mov     edi, offset aErrorInputLine ; "Error: Input line too long"
                call    _puts
                mov     eax, cs:num_input_strings
                lea     edx, [rax+1]
                mov     cs:num_input_strings, edx
                cdqe
                imul    rax, 50h
                mov     rdi, 636E7572742A2A2Ah
                mov     ds:input_strings[rax], rdi
                mov     rdi, 2A2A2A64657461h
                mov     ds:qword_6047E8[rax], rdi
                call    explode_bomb
; ---------------------------------------------------------------------------

loc_401805:                             ; CODE XREF: read_line+B4↑j
                sub     ecx, 1
                movsxd  rcx, ecx
                movsxd  rax, edx
                lea     rax, [rax+rax*4]
                shl     rax, 4
                mov     byte ptr ds:input_strings[rcx+rax], 0
                add     edx, 1
                mov     cs:num_input_strings, edx
                mov     rax, rsi
                add     rsp, 8
                retn
; } // starts at 401709
read_line       endp


; =============== S U B R O U T I N E =======================================


                public phase_defused
phase_defused   proc near               ; CODE XREF: main+9F↑p
                                        ; main+BB↑p ...

var_70          = byte ptr -70h
var_6C          = byte ptr -6Ch
var_68          = byte ptr -68h
var_10          = qword ptr -10h

; __unwind {
                sub     rsp, 78h
                mov     rax, fs:28h
                mov     [rsp+78h+var_10], rax
                xor     eax, eax
                mov     edi, 1
                call    send_msg
                cmp     cs:num_input_strings, 6
                jnz     short loc_4018C3
                lea     r8, [rsp+78h+var_68]
                lea     rcx, [rsp+78h+var_6C]
                lea     rdx, [rsp+78h+var_70]
                mov     esi, offset aDDS ; "%d %d %s"
                mov     edi, offset unk_6048D0
                mov     eax, 0
                call    ___isoc99_sscanf
                cmp     eax, 3
                jnz     short loc_4018AF
                mov     esi, offset aDrevil ; "DrEvil"
                lea     rdi, [rsp+78h+var_68]
                call    strings_not_equal
                test    eax, eax
                jnz     short loc_4018AF
                mov     edi, offset aCursesYouVeFou ; "Curses, you've found the secret phase!"
                call    _puts
                mov     edi, offset aButFindingItAn ; "But finding it and solving it are quite"...
                call    _puts
                mov     eax, 0
                call    secret_phase

loc_4018AF:                             ; CODE XREF: phase_defused+4D↑j
                                        ; phase_defused+60↑j
                mov     edi, offset aCongratulation ; "Congratulations! You've defused the bom"...
                call    _puts
                mov     edi, offset aYourInstructor_0 ; "Your instructor has been notified and w"...
                call    _puts

loc_4018C3:                             ; CODE XREF: phase_defused+25↑j
                mov     rax, [rsp+78h+var_10]
                xor     rax, fs:28h
                jz      short loc_4018D8
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_4018D8:                             ; CODE XREF: phase_defused+A2↑j
                add     rsp, 78h
                retn
; } // starts at 40182F
phase_defused   endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

; void sigalrm_handler(int)
                public sigalrm_handler
sigalrm_handler proc near               ; DATA XREF: init_timeout+7↓o
; __unwind {
                sub     rsp, 8
                mov     ecx, 0
                mov     edx, offset aProgramTimedOu ; "Program timed out after %d seconds\n"
                mov     esi, 1
                mov     rdi, cs:stderr@@GLIBC_2_2_5
                mov     eax, 0
                call    ___fprintf_chk
                mov     edi, 1          ; status
                call    _exit
; } // starts at 4018E0
sigalrm_handler endp


; =============== S U B R O U T I N E =======================================


rio_readlineb   proc near               ; CODE XREF: submitr+46C↓p
                                        ; submitr+56F↓p ...

var_5C          = dword ptr -5Ch
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_39          = byte ptr -39h

; __unwind {
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbp
                push    rbx
                sub     rsp, 38h
                mov     r14, rsi
                mov     [rsp+68h+var_50], rdx
                cmp     rdx, 1
                jbe     loc_4019F7
                mov     rbx, rdi
                mov     r13d, 1
                lea     r12, [rdi+10h]
                jmp     short loc_40196D
; ---------------------------------------------------------------------------

loc_40193D:                             ; CODE XREF: rio_readlineb+64↓j
                mov     edx, 2000h      ; nbytes
                mov     rsi, r12        ; buf
                mov     edi, [rbx]      ; fd
                call    _read
                mov     [rbx+4], eax
                test    eax, eax
                jns     short loc_401965
                call    ___errno_location
                cmp     dword ptr [rax], 4
                jz      short loc_40196D
                nop     dword ptr [rax]
                jmp     loc_401A06
; ---------------------------------------------------------------------------

loc_401965:                             ; CODE XREF: rio_readlineb+43↑j
                test    eax, eax
                jz      short loc_4019DA
                mov     [rbx+8], r12

loc_40196D:                             ; CODE XREF: rio_readlineb+2D↑j
                                        ; rio_readlineb+4D↑j ...
                mov     ebp, [rbx+4]
                test    ebp, ebp
                jle     short loc_40193D
                test    ebp, ebp
                setnz   r15b
                movzx   eax, r15b
                mov     [rsp+68h+var_5C], eax
                movzx   r15d, r15b
                mov     rcx, [rbx+8]
                mov     rsi, rcx
                mov     ecx, 1
                mov     rdx, r15
                mov     [rsp+68h+var_58], rsi
                lea     rdi, [rsp+68h+var_39]
                call    ___memcpy_chk
                add     r15, [rsp+68h+var_58]
                mov     [rbx+8], r15
                mov     eax, [rsp+68h+var_5C]
                sub     ebp, eax
                mov     [rbx+4], ebp
                cmp     eax, 1
                jnz     short loc_4019CE
                add     r14, 1
                movzx   eax, [rsp+68h+var_39]
                mov     [r14-1], al
                cmp     al, 0Ah
                jnz     short loc_4019E4
                jmp     short loc_4019FD
; ---------------------------------------------------------------------------

loc_4019CE:                             ; CODE XREF: rio_readlineb+AB↑j
                cmp     [rsp+68h+var_5C], 0
                jnz     short loc_401A0F
                mov     eax, r13d
                jmp     short loc_4019DD
; ---------------------------------------------------------------------------

loc_4019DA:                             ; CODE XREF: rio_readlineb+59↑j
                mov     eax, r13d

loc_4019DD:                             ; CODE XREF: rio_readlineb+CA↑j
                cmp     eax, 1
                jnz     short loc_4019FD
                jmp     short loc_401A18
; ---------------------------------------------------------------------------

loc_4019E4:                             ; CODE XREF: rio_readlineb+BC↑j
                add     r13d, 1
                movsxd  rax, r13d
                cmp     rax, [rsp+68h+var_50]
                jnb     short loc_4019FD
                jmp     loc_40196D
; ---------------------------------------------------------------------------

loc_4019F7:                             ; CODE XREF: rio_readlineb+1A↑j
                mov     r13d, 1

loc_4019FD:                             ; CODE XREF: rio_readlineb+BE↑j
                                        ; rio_readlineb+D2↑j ...
                mov     byte ptr [r14], 0
                movsxd  rax, r13d
                jmp     short loc_401A1D
; ---------------------------------------------------------------------------

loc_401A06:                             ; CODE XREF: rio_readlineb+52↑j
                mov     rax, 0FFFFFFFFFFFFFFFFh
                jmp     short loc_401A1D
; ---------------------------------------------------------------------------

loc_401A0F:                             ; CODE XREF: rio_readlineb+C5↑j
                mov     rax, 0FFFFFFFFFFFFFFFFh
                jmp     short loc_401A1D
; ---------------------------------------------------------------------------

loc_401A18:                             ; CODE XREF: rio_readlineb+D4↑j
                mov     eax, 0

loc_401A1D:                             ; CODE XREF: rio_readlineb+F6↑j
                                        ; rio_readlineb+FF↑j ...
                add     rsp, 38h
                pop     rbx
                pop     rbp
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                retn
; } // starts at 40190E
rio_readlineb   endp


; =============== S U B R O U T I N E =======================================


; __int64 __usercall submitr@<rax>(char *name@<rdi>, __int64, __int64)
                public submitr
submitr         proc near               ; CODE XREF: driver_post+5E↓p

var_A0A8        = qword ptr -0A0A8h
var_A0A0        = qword ptr -0A0A0h
var_A098        = qword ptr -0A098h
var_A090        = qword ptr -0A090h
var_A088        = qword ptr -0A088h
var_A080        = qword ptr -0A080h
var_A06C        = dword ptr -0A06Ch
addr            = sockaddr ptr -0A068h
src             = byte ptr -0A058h
var_A057        = byte ptr -0A057h
var_A056        = byte ptr -0A056h
var_8058        = byte ptr -8058h
var_6058        = byte ptr -6058h
var_4058        = byte ptr -4058h
var_2058        = dword ptr -2058h
var_2054        = dword ptr -2054h
var_2050        = qword ptr -2050h
var_2048        = byte ptr -2048h
var_40          = qword ptr -40h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

; __unwind {
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbp
                push    rbx
                sub     rsp, 0A078h
                mov     rbp, rdi
                mov     r13d, esi
                mov     [rsp+0A0A8h+var_A090], rdx
                mov     [rsp+0A0A8h+var_A088], rcx
                mov     [rsp+0A0A8h+var_A080], r8
                mov     r15, r9
                mov     rbx, [rsp+0A0A8h+arg_0]
                mov     r14, [rsp+0A0A8h+arg_8]
                mov     rax, fs:28h
                mov     [rsp+0A0A8h+var_40], rax
                xor     eax, eax
                mov     [rsp+0A0A8h+var_A06C], 0
                mov     edx, 0          ; protocol
                mov     esi, 1          ; type
                mov     edi, 2          ; domain
                call    _socket
                mov     r12d, eax
                test    eax, eax
                jns     short loc_401AEB
                mov     rax, 43203A726F727245h
                mov     [r14], rax
                mov     rax, 6E7520746E65696Ch
                mov     [r14+8], rax
                mov     rax, 206F7420656C6261h
                mov     [r14+10h], rax
                mov     rax, 7320657461657263h
                mov     [r14+18h], rax
                mov     dword ptr [r14+20h], 656B636Fh
                mov     word ptr [r14+24h], 74h
                mov     eax, 0FFFFFFFFh
                jmp     loc_4020FD
; ---------------------------------------------------------------------------

loc_401AEB:                             ; CODE XREF: submitr+6D↑j
                mov     rdi, rbp        ; name
                call    _gethostbyname
                test    rax, rax
                jnz     short loc_401B63
                mov     rax, 44203A726F727245h
                mov     [r14], rax
                mov     rax, 6E7520736920534Eh
                mov     [r14+8], rax
                mov     rax, 206F7420656C6261h
                mov     [r14+10h], rax
                mov     rax, 2065766C6F736572h
                mov     [r14+18h], rax
                mov     rax, 6120726576726573h
                mov     [r14+20h], rax
                mov     dword ptr [r14+28h], 65726464h
                mov     word ptr [r14+2Ch], 7373h
                mov     byte ptr [r14+2Eh], 0
                mov     edi, r12d       ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     loc_4020FD
; ---------------------------------------------------------------------------

loc_401B63:                             ; CODE XREF: submitr+CA↑j
                mov     qword ptr [rsp+0A0A8h+addr.sa_family], 0
                mov     qword ptr [rsp+0A0A8h+addr.sa_data+6], 0
                mov     [rsp+0A0A8h+addr.sa_family], 2
                movsxd  rdx, dword ptr [rax+14h]
                mov     rax, [rax+18h]
                lea     rdi, [rsp+0A0A8h+addr.sa_data+2]
                mov     ecx, 0Ch
                mov     rsi, [rax]
                call    ___memmove_chk
                ror     r13w, 8
                mov     word ptr [rsp+0A0A8h+addr.sa_data], r13w
                mov     edx, 10h        ; len
                lea     rsi, [rsp+0A0A8h+addr] ; addr
                mov     edi, r12d       ; fd
                call    _connect
                test    eax, eax
                jns     short loc_401C14
                mov     rax, 55203A726F727245h
                mov     [r14], rax
                mov     rax, 6F7420656C62616Eh
                mov     [r14+8], rax
                mov     rax, 7463656E6E6F6320h
                mov     [r14+10h], rax
                mov     rax, 20656874206F7420h
                mov     [r14+18h], rax
                mov     dword ptr [r14+20h], 76726573h
                mov     word ptr [r14+24h], 7265h
                mov     byte ptr [r14+26h], 0
                mov     edi, r12d       ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     loc_4020FD
; ---------------------------------------------------------------------------

loc_401C14:                             ; CODE XREF: submitr+189↑j
                mov     rdx, 0FFFFFFFFFFFFFFFFh
                mov     rdi, rbx
                mov     eax, 0
                mov     rcx, rdx
                repne scasb
                not     rcx
                mov     rsi, rcx
                mov     rdi, [rsp+0A0A8h+var_A090]
                mov     rcx, rdx
                repne scasb
                mov     r8, rcx
                mov     rdi, [rsp+0A0A8h+var_A088]
                mov     rcx, rdx
                repne scasb
                not     rcx
                mov     r9, rcx
                mov     rdi, r15
                mov     rcx, rdx
                repne scasb
                sub     r9, r8
                sub     r9, rcx
                lea     rax, [rsi+rsi*2-3]
                lea     rax, [r9+rax+7Bh]
                cmp     rax, 2000h
                jbe     short loc_401CDE
                mov     rax, 52203A726F727245h
                mov     [r14], rax
                mov     rax, 747320746C757365h
                mov     [r14+8], rax
                mov     rax, 6F6F7420676E6972h
                mov     [r14+10h], rax
                mov     rax, 202E656772616C20h
                mov     [r14+18h], rax
                mov     rax, 6573616572636E49h
                mov     [r14+20h], rax
                mov     rax, 5254494D42555320h
                mov     [r14+28h], rax
                mov     rax, 46554258414D5Fh
                mov     [r14+30h], rax
                mov     edi, r12d       ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     loc_4020FD
; ---------------------------------------------------------------------------

loc_401CDE:                             ; CODE XREF: submitr+23D↑j
                lea     rdx, [rsp+0A0A8h+var_8058]
                mov     ecx, 400h
                mov     eax, 0
                mov     rdi, rdx
                rep stosq
                mov     rdi, rbx
                mov     rcx, 0FFFFFFFFFFFFFFFFh
                repne scasb
                not     rcx
                sub     rcx, 1
                test    ecx, ecx
                jz      loc_402119
                lea     eax, [rcx-1]
                lea     r13, [rbx+rax+1]
                mov     rbp, rdx

loc_401D1C:                             ; CODE XREF: submitr+3A3↓j
                movzx   r8d, byte ptr [rbx]
                cmp     r8b, 2Ah
                jz      short loc_401D49
                lea     eax, [r8-2Dh]
                cmp     al, 1
                jbe     short loc_401D49
                cmp     r8b, 5Fh
                jz      short loc_401D49
                lea     eax, [r8-30h]
                cmp     al, 9
                jbe     short loc_401D49
                mov     eax, r8d
                and     eax, 0FFFFFFDFh
                sub     eax, 41h
                cmp     al, 19h
                ja      short loc_401D53

loc_401D49:                             ; CODE XREF: submitr+2F8↑j
                                        ; submitr+300↑j ...
                lea     rax, [rbp+1]
                mov     [rbp+0], r8b
                jmp     short loc_401DBF
; ---------------------------------------------------------------------------

loc_401D53:                             ; CODE XREF: submitr+31B↑j
                cmp     r8b, 20h
                jnz     short loc_401D63
                lea     rax, [rbp+1]
                mov     byte ptr [rbp+0], 2Bh
                jmp     short loc_401DBF
; ---------------------------------------------------------------------------

loc_401D63:                             ; CODE XREF: submitr+32B↑j
                lea     eax, [r8-20h]
                cmp     al, 5Fh
                jbe     short loc_401D75
                cmp     r8b, 9
                jnz     loc_40218C

loc_401D75:                             ; CODE XREF: submitr+33D↑j
                movzx   r8d, r8b
                mov     ecx, offset a02x ; "%%%02X"
                mov     edx, 8
                mov     esi, 1
                lea     rdi, [rsp+0A0A8h+var_2058]
                mov     eax, 0
                call    ___sprintf_chk
                movzx   eax, byte ptr [rsp+0A0A8h+var_2058]
                mov     [rbp+0], al
                movzx   eax, byte ptr [rsp+0A0A8h+var_2058+1]
                mov     [rbp+1], al
                lea     rax, [rbp+3]
                movzx   edx, byte ptr [rsp+0A0A8h+var_2058+2]
                mov     [rbp+2], dl

loc_401DBF:                             ; CODE XREF: submitr+325↑j
                                        ; submitr+335↑j
                add     rbx, 1
                cmp     rbx, r13
                jz      loc_402119
                mov     rbp, rax
                jmp     loc_401D1C
; ---------------------------------------------------------------------------

loc_401DD4:                             ; CODE XREF: submitr+3D1↓j
                                        ; submitr+75B↓j
                mov     rdx, rbx        ; n
                mov     rsi, rbp        ; buf
                mov     edi, r12d       ; fd
                call    _write
                test    rax, rax
                jg      short loc_401DF7
                call    ___errno_location
                cmp     dword ptr [rax], 4
                nop
                jnz     short loc_401E04
                mov     eax, 0

loc_401DF7:                             ; CODE XREF: submitr+3B9↑j
                add     rbp, rax
                sub     rbx, rax
                jnz     short loc_401DD4
                test    r13, r13
                jns     short loc_401E63

loc_401E04:                             ; CODE XREF: submitr+3C4↑j
                mov     rax, 43203A726F727245h
                mov     [r14], rax
                mov     rax, 6E7520746E65696Ch
                mov     [r14+8], rax
                mov     rax, 206F7420656C6261h
                mov     [r14+10h], rax
                mov     rax, 6F74206574697277h
                mov     [r14+18h], rax
                mov     rax, 7265732065687420h
                mov     [r14+20h], rax
                mov     dword ptr [r14+28h], 726576h
                mov     edi, r12d       ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     loc_4020FD
; ---------------------------------------------------------------------------

loc_401E63:                             ; CODE XREF: submitr+3D6↑j
                                        ; submitr+74D↓j
                mov     [rsp+0A0A8h+var_2058], r12d
                mov     [rsp+0A0A8h+var_2054], 0
                lea     rax, [rsp+0A0A8h+var_2048]
                mov     [rsp+0A0A8h+var_2050], rax
                mov     edx, 2000h
                lea     rsi, [rsp+0A0A8h+src]
                lea     rdi, [rsp+0A0A8h+var_2058]
                call    rio_readlineb
                test    rax, rax
                jg      short loc_401F16
                mov     rax, 43203A726F727245h
                mov     [r14], rax
                mov     rax, 6E7520746E65696Ch
                mov     [r14+8], rax
                mov     rax, 206F7420656C6261h
                mov     [r14+10h], rax
                mov     rax, 7269662064616572h
                mov     [r14+18h], rax
                mov     rax, 6564616568207473h
                mov     [r14+20h], rax
                mov     rax, 73206D6F72662072h
                mov     [r14+28h], rax
                mov     dword ptr [r14+30h], 65767265h
                mov     word ptr [r14+34h], 72h
                mov     edi, r12d       ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     loc_4020FD
; ---------------------------------------------------------------------------

loc_401F16:                             ; CODE XREF: submitr+474↑j
                lea     r8, [rsp+0A0A8h+var_4058]
                lea     rcx, [rsp+0A0A8h+var_A06C]
                lea     rdx, [rsp+0A0A8h+var_6058]
                mov     esi, offset aSDAZaZ ; "%s %d %[a-zA-z ]"
                lea     rdi, [rsp+0A0A8h+src]
                mov     eax, 0
                call    ___isoc99_sscanf
                mov     r8d, [rsp+0A0A8h+var_A06C]
                cmp     r8d, 0C8h
                jz      loc_40200F
                lea     r9, [rsp+0A0A8h+var_4058]
                mov     ecx, offset aErrorHttpReque ; "Error: HTTP request failed with error %"...
                mov     rdx, 0FFFFFFFFFFFFFFFFh
                mov     esi, 1
                mov     rdi, r14
                mov     eax, 0
                call    ___sprintf_chk
                mov     edi, r12d       ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     loc_4020FD
; ---------------------------------------------------------------------------

loc_401F89:                             ; CODE XREF: submitr+5E8↓j
                                        ; submitr+5F3↓j ...
                mov     edx, 2000h
                lea     rsi, [rsp+0A0A8h+src]
                lea     rdi, [rsp+0A0A8h+var_2058]
                call    rio_readlineb
                test    rax, rax
                jg      short loc_40200F
                mov     rax, 43203A726F727245h
                mov     [r14], rax
                mov     rax, 6E7520746E65696Ch
                mov     [r14+8], rax
                mov     rax, 206F7420656C6261h
                mov     [r14+10h], rax
                mov     rax, 6165682064616572h
                mov     [r14+18h], rax
                mov     rax, 6F72662073726564h
                mov     [r14+20h], rax
                mov     rax, 726576726573206Dh
                mov     [r14+28h], rax
                mov     byte ptr [r14+30h], 0
                mov     edi, r12d       ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     loc_4020FD
; ---------------------------------------------------------------------------

loc_40200F:                             ; CODE XREF: submitr+51F↑j
                                        ; submitr+577↑j
                cmp     [rsp+0A0A8h+src], 0Dh
                jnz     loc_401F89
                cmp     [rsp+0A0A8h+var_A057], 0Ah
                jnz     loc_401F89
                cmp     [rsp+0A0A8h+var_A056], 0
                jnz     loc_401F89
                mov     edx, 2000h
                lea     rsi, [rsp+0A0A8h+src]
                lea     rdi, [rsp+0A0A8h+var_2058]
                call    rio_readlineb
                test    rax, rax
                jg      short loc_4020BC
                mov     rax, 43203A726F727245h
                mov     [r14], rax
                mov     rax, 6E7520746E65696Ch
                mov     [r14+8], rax
                mov     rax, 206F7420656C6261h
                mov     [r14+10h], rax
                mov     rax, 6174732064616572h
                mov     [r14+18h], rax
                mov     rax, 7373656D20737574h
                mov     [r14+20h], rax
                mov     rax, 6D6F726620656761h
                mov     [r14+28h], rax
                mov     rax, 72657672657320h
                mov     [r14+30h], rax
                mov     edi, r12d       ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     short loc_4020FD
; ---------------------------------------------------------------------------

loc_4020BC:                             ; CODE XREF: submitr+61E↑j
                lea     rsi, [rsp+0A0A8h+src] ; src
                mov     rdi, r14        ; dest
                call    _strcpy
                mov     edi, r12d       ; fd
                call    _close
                movzx   eax, byte ptr [r14]
                mov     edx, 4Fh
                sub     edx, eax
                jnz     short loc_4020F3
                movzx   eax, byte ptr [r14+1]
                mov     edx, 4Bh
                sub     edx, eax
                jnz     short loc_4020F3
                movzx   edx, byte ptr [r14+2]
                neg     edx

loc_4020F3:                             ; CODE XREF: submitr+6B0↑j
                                        ; submitr+6BE↑j
                test    edx, edx
                setnz   al
                movzx   eax, al
                neg     eax

loc_4020FD:                             ; CODE XREF: submitr+BA↑j
                                        ; submitr+132↑j ...
                mov     rdx, [rsp+0A0A8h+var_40]
                xor     rdx, fs:28h
                jz      loc_40221E
                jmp     loc_402219
; ---------------------------------------------------------------------------

loc_402119:                             ; CODE XREF: submitr+2DF↑j
                                        ; submitr+39A↑j
                lea     rax, [rsp+0A0A8h+var_8058]
                mov     [rsp+0A0A8h+var_A098], rax
                mov     [rsp+0A0A8h+var_A0A0], r15
                mov     rax, [rsp+0A0A8h+var_A080]
                mov     [rsp+0A0A8h+var_A0A8], rax
                mov     r9, [rsp+0A0A8h+var_A088]
                mov     r8, [rsp+0A0A8h+var_A090]
                mov     ecx, offset aGetSSubmitrPlU ; "GET /%s/submitr.pl/?userid=%s&userpwd=%"...
                mov     edx, 2000h
                mov     esi, 1
                lea     rdi, [rsp+0A0A8h+src]
                mov     eax, 0
                call    ___sprintf_chk
                lea     rdi, [rsp+0A0A8h+src]
                mov     eax, 0
                mov     rcx, 0FFFFFFFFFFFFFFFFh
                repne scasb
                not     rcx
                sub     rcx, 1
                mov     r13, rcx
                jz      loc_401E63
                mov     rbx, rcx
                lea     rbp, [rsp+0A0A8h+src]
                jmp     loc_401DD4
; ---------------------------------------------------------------------------

loc_40218C:                             ; CODE XREF: submitr+343↑j
                mov     rax, 52203A726F727245h
                mov     [r14], rax
                mov     rax, 747320746C757365h
                mov     [r14+8], rax
                mov     rax, 6E6F6320676E6972h
                mov     [r14+10h], rax
                mov     rax, 6E6120736E696174h
                mov     [r14+18h], rax
                mov     rax, 6C6167656C6C6920h
                mov     [r14+20h], rax
                mov     rax, 72706E7520726F20h
                mov     [r14+28h], rax
                mov     rax, 20656C6261746E69h
                mov     [r14+30h], rax
                mov     rax, 6574636172616863h
                mov     [r14+38h], rax
                mov     word ptr [r14+40h], 2E72h
                mov     byte ptr [r14+42h], 0
                mov     edi, r12d       ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     loc_4020FD
; ---------------------------------------------------------------------------

loc_402219:                             ; CODE XREF: submitr+6E8↑j
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_40221E:                             ; CODE XREF: submitr+6E2↑j
                add     rsp, 0A078h
                pop     rbx
                pop     rbp
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                retn
; } // starts at 401A2C
submitr         endp


; =============== S U B R O U T I N E =======================================


; __int64 __fastcall init_timeout(unsigned int seconds)
                public init_timeout
init_timeout    proc near
; __unwind {
                push    rbx
                mov     ebx, edi
                test    edi, edi
                jz      short loc_402255
                mov     esi, offset sigalrm_handler ; handler
                mov     edi, 0Eh        ; sig
                call    _signal
                test    ebx, ebx
                mov     edi, 0
                cmovns  edi, ebx        ; seconds
                call    _alarm

loc_402255:                             ; CODE XREF: init_timeout+5↑j
                pop     rbx
                retn
; } // starts at 402230
init_timeout    endp


; =============== S U B R O U T I N E =======================================


                public init_driver
init_driver     proc near               ; CODE XREF: initialize_bomb+B9↑p

var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_20          = qword ptr -20h

; __unwind {
                push    rbp
                push    rbx
                sub     rsp, 28h
                mov     rbp, rdi
                mov     rax, fs:28h
                mov     [rsp+38h+var_20], rax
                xor     eax, eax
                mov     esi, 1          ; handler
                mov     edi, 0Dh        ; sig
                call    _signal
                mov     esi, 1          ; handler
                mov     edi, 1Dh        ; sig
                call    _signal
                mov     esi, 1          ; handler
                mov     edi, 1Dh        ; sig
                call    _signal
                mov     edx, 0          ; protocol
                mov     esi, 1          ; type
                mov     edi, 2          ; domain
                call    _socket
                mov     ebx, eax
                test    eax, eax
                jns     short loc_402306
                mov     rax, 43203A726F727245h
                mov     [rbp+0], rax
                mov     rax, 6E7520746E65696Ch
                mov     [rbp+8], rax
                mov     rax, 206F7420656C6261h
                mov     [rbp+10h], rax
                mov     rax, 7320657461657263h
                mov     [rbp+18h], rax
                mov     dword ptr [rbp+20h], 656B636Fh
                mov     word ptr [rbp+24h], 74h
                mov     eax, 0FFFFFFFFh
                jmp     loc_402410
; ---------------------------------------------------------------------------

loc_402306:                             ; CODE XREF: init_driver+5E↑j
                mov     edi, offset a1048768 ; "10.48.76.8"
                call    _gethostbyname
                test    rax, rax
                jnz     short loc_40237D
                mov     rax, 44203A726F727245h
                mov     [rbp+0], rax
                mov     rax, 6E7520736920534Eh
                mov     [rbp+8], rax
                mov     rax, 206F7420656C6261h
                mov     [rbp+10h], rax
                mov     rax, 2065766C6F736572h
                mov     [rbp+18h], rax
                mov     rax, 6120726576726573h
                mov     [rbp+20h], rax
                mov     dword ptr [rbp+28h], 65726464h
                mov     word ptr [rbp+2Ch], 7373h
                mov     byte ptr [rbp+2Eh], 0
                mov     edi, ebx        ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     loc_402410
; ---------------------------------------------------------------------------

loc_40237D:                             ; CODE XREF: init_driver+BC↑j
                mov     [rsp+38h+var_38], 0
                mov     [rsp+38h+var_30], 0
                mov     word ptr [rsp+38h+var_38], 2
                movsxd  rdx, dword ptr [rax+14h]
                mov     rax, [rax+18h]
                lea     rdi, [rsp+38h+var_38+4]
                mov     ecx, 0Ch
                mov     rsi, [rax]
                call    ___memmove_chk
                mov     word ptr [rsp+38h+var_38+2], 6E3Bh
                mov     edx, 10h        ; len
                mov     rsi, rsp        ; addr
                mov     edi, ebx        ; fd
                call    _connect
                test    eax, eax
                jns     short loc_4023FA
                mov     r8d, offset a1048768 ; "10.48.76.8"
                mov     ecx, offset aErrorUnableToC ; "Error: Unable to connect to server %s"
                mov     rdx, 0FFFFFFFFFFFFFFFFh
                mov     esi, 1
                mov     rdi, rbp
                mov     eax, 0
                call    ___sprintf_chk
                mov     edi, ebx        ; fd
                call    _close
                mov     eax, 0FFFFFFFFh
                jmp     short loc_402410
; ---------------------------------------------------------------------------

loc_4023FA:                             ; CODE XREF: init_driver+16F↑j
                mov     edi, ebx        ; fd
                call    _close
                mov     word ptr [rbp+0], 4B4Fh
                mov     byte ptr [rbp+2], 0
                mov     eax, 0

loc_402410:                             ; CODE XREF: init_driver+AA↑j
                                        ; init_driver+121↑j ...
                mov     rcx, [rsp+38h+var_20]
                xor     rcx, fs:28h
                jz      short loc_402425
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_402425:                             ; CODE XREF: init_driver+1C7↑j
                add     rsp, 28h
                pop     rbx
                pop     rbp
                retn
; } // starts at 402257
init_driver     endp


; =============== S U B R O U T I N E =======================================


                public driver_post
driver_post     proc near               ; CODE XREF: send_msg+CC↑p

var_18          = qword ptr -18h
var_10          = qword ptr -10h

; __unwind {
                push    rbx
                sub     rsp, 10h
                mov     rbx, r8
                test    ecx, ecx
                jz      short loc_40245C
                mov     esi, offset aAutoresultStri ; "\nAUTORESULT_STRING=%s\n"
                mov     edi, 1
                mov     eax, 0
                call    ___printf_chk
                mov     word ptr [rbx], 4B4Fh
                mov     byte ptr [rbx+2], 0
                mov     eax, 0
                jmp     short loc_40249F
; ---------------------------------------------------------------------------

loc_40245C:                             ; CODE XREF: driver_post+A↑j
                test    rdi, rdi
                jz      short loc_402491
                cmp     byte ptr [rdi], 0
                jz      short loc_402491
                mov     [rsp+18h+var_10], r8 ; __int64
                mov     [rsp+18h+var_18], rdx ; __int64
                mov     r9d, offset aF12 ; "f12"
                mov     r8, rsi
                mov     rcx, rdi
                mov     edx, offset aCsapp ; "csapp"
                mov     esi, 3B6Eh
                mov     edi, offset a1048768 ; "10.48.76.8"
                call    submitr
                jmp     short loc_40249F
; ---------------------------------------------------------------------------

loc_402491:                             ; CODE XREF: driver_post+33↑j
                                        ; driver_post+38↑j
                mov     word ptr [rbx], 4B4Fh
                mov     byte ptr [rbx+2], 0
                mov     eax, 0

loc_40249F:                             ; CODE XREF: driver_post+2E↑j
                                        ; driver_post+63↑j
                add     rsp, 10h
                pop     rbx
                retn
; } // starts at 40242C
driver_post     endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


; void _libc_csu_init(void)
                public __libc_csu_init
__libc_csu_init proc near               ; DATA XREF: _start+16↑o
; __unwind {
                push    r15
                mov     r15d, edi
                push    r14
                mov     r14, rsi
                push    r13
                mov     r13, rdx
                push    r12
                lea     r12, __frame_dummy_init_array_entry
                push    rbp
                lea     rbp, __do_global_dtors_aux_fini_array_entry
                push    rbx
                sub     rbp, r12
                xor     ebx, ebx
                sar     rbp, 3
                sub     rsp, 8
                call    _init_proc
                test    rbp, rbp
                jz      short loc_402506
                nop     dword ptr [rax+rax+00000000h]

loc_4024F0:                             ; CODE XREF: __libc_csu_init+54↓j
                mov     rdx, r13
                mov     rsi, r14
                mov     edi, r15d
                call    qword ptr [r12+rbx*8]
                add     rbx, 1
                cmp     rbx, rbp
                jnz     short loc_4024F0

loc_402506:                             ; CODE XREF: __libc_csu_init+36↑j
                add     rsp, 8
                pop     rbx
                pop     rbp
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                retn
; } // starts at 4024B0
__libc_csu_init endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


; void _libc_csu_fini(void)
                public __libc_csu_fini
__libc_csu_fini proc near               ; DATA XREF: _start+F↑o
; __unwind {
                rep retn
; } // starts at 402520
__libc_csu_fini endp

_text           ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
LOAD            segment byte public 'CODE' use64
                assume cs:LOAD
                ;org 402522h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                align 4
LOAD            ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_fini           segment dword public 'CODE' use64
                assume cs:_fini
                ;org 402524h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================


                public _term_proc
_term_proc      proc near
                sub     rsp, 8          ; _fini
                add     rsp, 8
                retn
_term_proc      endp

_fini           ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
LOAD            segment byte public 'CODE' use64
                assume cs:LOAD
                ;org 40252Dh
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                align 20h
LOAD            ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rodata         segment para public 'CONST' use64
                assume cs:_rodata
                ;org 402540h
                public _IO_stdin_used
_IO_stdin_used  db    1
                db    0
                db    2
                db    0
; char modes[2]
modes           db 'r',0                ; DATA XREF: main+22↑o
aSErrorCouldnTO db '%s: Error: Couldn',27h,'t open %s',0Ah,0
                                        ; DATA XREF: main+3F↑o
aUsageSInputFil db 'Usage: %s [<input_file>]',0Ah,0
                                        ; DATA XREF: main+5B↑o
; char aThatSNumber2Ke[]
aThatSNumber2Ke db 'That',27h,'s number 2.  Keep going!',0
                                        ; DATA XREF: main+C0↑o
; char aHalfwayThere[]
aHalfwayThere   db 'Halfway there!',0   ; DATA XREF: main+DC↑o
; char aGoodWorkOnToTh[]
aGoodWorkOnToTh db 'Good work!  On to the next...',0
                                        ; DATA XREF: main+114↑o
; char s[]
s               db 'Welcome to my fiendish little bomb. You have 6 phases with',0
                                        ; DATA XREF: main+7E↑o
                align 8
; char aWhichToBlowYou[]
aWhichToBlowYou db 'which to blow yourself up. Have a nice day!',0
                                        ; DATA XREF: main+88↑o
                align 8
; char aPhase1DefusedH[]
aPhase1DefusedH db 'Phase 1 defused. How about the next one?',0
                                        ; DATA XREF: main+A4↑o
                align 8
; char aSoYouGotThatOn[]
aSoYouGotThatOn db 'So you got that one.  Try this one.',0
                                        ; DATA XREF: main+F8↑o
                align 10h
aForNasaSpaceIs db 'For NASA, space is still a high priority.',0
                                        ; DATA XREF: phase_1+4↑o
                align 20h
; char aWowYouVeDefuse[]
aWowYouVeDefuse db 'Wow! You',27h,'ve defused the secret stage!',0
                                        ; DATA XREF: secret_phase:loc_401304↑o
                align 20h
off_402700      dq offset loc_401037    ; DATA XREF: phase_3+32↑r
                dq offset loc_401030    ; jump table for switch statement
                dq offset loc_401043
                dq offset loc_40104F
                dq offset loc_40105B
                dq offset loc_401067
                dq offset loc_401073
                dq offset loc_40107F
array_3493      dd 2                    ; DATA XREF: phase_5+24↑r
                db  0Ah
                db    0
                db    0
                db    0
                db    6
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db  0Ch
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db    9
                db    0
                db    0
                db    0
                db    3
                db    0
                db    0
                db    0
                db    4
                db    0
                db    0
                db    0
                db    7
                db    0
                db    0
                db    0
                db  0Eh
                db    0
                db    0
                db    0
                db    5
                db    0
                db    0
                db    0
                db  0Bh
                db    0
                db    0
                db    0
                db    8
                db    0
                db    0
                db    0
                db  0Fh
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
; char aSoYouThinkYouC[]
aSoYouThinkYouC db 'So you think you can stop the bomb with ctrl-c, do you?',0
                                        ; DATA XREF: sig_handler+4↑o
; char aInitialization[]
aInitialization db 'Initialization error: Running on an illegal host [1]',0
                                        ; DATA XREF: initialize_bomb:loc_401470↑o
                align 10h
; char aInitialization_1[]
aInitialization_1 db 'Initialization error: Running on an illegal host [2]',0
                                        ; DATA XREF: initialize_bomb:loc_4014C2↑o
                align 8
aErrorInputStri db 'ERROR: Input string is too large.',0
                                        ; DATA XREF: send_msg+58↑o
                align 10h
; char aYourInstructor[]
aYourInstructor db 'Your instructor has been notified.',0
                                        ; DATA XREF: explode_bomb+22↑o
                align 8
; char aCursesYouVeFou[]
aCursesYouVeFou db 'Curses, you',27h,'ve found the secret phase!',0
                                        ; DATA XREF: phase_defused+62↑o
                align 20h
; char aButFindingItAn[]
aButFindingItAn db 'But finding it and solving it are quite different...',0
                                        ; DATA XREF: phase_defused+6C↑o
                align 8
; char aCongratulation[]
aCongratulation db 'Congratulations! You',27h,'ve defused the bomb!',0
                                        ; DATA XREF: phase_defused:loc_4018AF↑o
                align 8
; char aYourInstructor_0[]
aYourInstructor_0 db 'Your instructor has been notified and will verify your solution.',0
                                        ; DATA XREF: phase_defused+8A↑o
aWell           db 'Well...',0          ; DATA XREF: sig_handler+18↑o
; char aOk[]
aOk             db 'OK. :-)',0          ; DATA XREF: sig_handler+42↑o
aInvalidPhaseS  db 'Invalid phase%s',0Ah,0
                                        ; DATA XREF: invalid_phase+7↑o
aInitialization_0 db 'Initialization error:',0Ah
                                        ; DATA XREF: initialize_bomb+82↑o
                db '%s',0Ah,0
aDefused        db 'defused',0          ; DATA XREF: send_msg+74↑o
aExploded       db 'exploded',0         ; DATA XREF: send_msg+79↑o
aDSDS           db '%d:%s:%d:%s',0      ; DATA XREF: send_msg+92↑o
; char aBoom[]
aBoom           db 0Ah                  ; DATA XREF: explode_bomb+4↑o
                db 'BOOM!!!',0
; char aTheBombHasBlow[]
aTheBombHasBlow db 'The bomb has blown up.',0
                                        ; DATA XREF: explode_bomb+E↑o
unk_4029C1      db  25h ; %             ; DATA XREF: read_six_numbers+24↑o
                db  64h ; d
                db  20h
                db  25h ; %
                db  64h ; d
                db  20h
                db  25h ; %
                db  64h ; d
                db  20h
                db  25h ; %
                db  64h ; d
                db  20h
aDD             db '%d %d',0            ; DATA XREF: phase_3+E↑o
                                        ; phase_4+E↑o
; char aErrorPremature[]
aErrorPremature db 'Error: Premature EOF on stdin',0
                                        ; DATA XREF: read_line+23↑o
                                        ; read_line+6D↑o
; char name[]
name            db 'GRADE_BOMB',0       ; DATA XREF: read_line:loc_401740↑o
; char aErrorInputLine[]
aErrorInputLine db 'Error: Input line too long',0
                                        ; DATA XREF: read_line+B6↑o
aDDS            db '%d %d %s',0         ; DATA XREF: phase_defused+36↑o
aDrevil         db 'DrEvil',0           ; DATA XREF: phase_defused+4F↑o
aCatlabUbuntu   db 'catlab-ubuntu',0    ; DATA XREF: .data:host_table↓o
                align 8
aProgramTimedOu db 'Program timed out after %d seconds',0Ah,0
                                        ; DATA XREF: sigalrm_handler+9↑o
                align 20h
aErrorHttpReque db 'Error: HTTP request failed with error %d: %s',0
                                        ; DATA XREF: submitr+52D↑o
                align 10h
aGetSSubmitrPlU db 'GET /%s/submitr.pl/?userid=%s&userpwd=%s&lab=%s&result=%s&submit='
                                        ; DATA XREF: submitr+712↑o
                db 'submit HTTP/1.0',0Dh,0Ah
                db 0Dh,0Ah,0
                align 8
aErrorUnableToC db 'Error: Unable to connect to server %s',0
                                        ; DATA XREF: init_driver+177↑o
                align 10h
a02x            db '%%%02X',0           ; DATA XREF: submitr+34D↑o
aSDAZaZ         db '%s %d %[a-zA-z ]',0 ; DATA XREF: submitr+4FF↑o
; char a1048768[]
a1048768        db '10.48.76.8',0       ; DATA XREF: init_driver:loc_402306↑o
                                        ; init_driver+171↑o ...
aAutoresultStri db 0Ah                  ; DATA XREF: driver_post+C↑o
                db 'AUTORESULT_STRING=%s',0Ah,0
aF12            db 'f12',0              ; DATA XREF: driver_post+43↑o
aCsapp          db 'csapp',0            ; DATA XREF: driver_post+4F↑o
_rodata         ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
_eh_frame_hdr   segment dword public 'CONST' use64
                assume cs:_eh_frame_hdr
                ;org 402B54h
unk_402B54      db    1                 ; DATA XREF: LOAD:00000000004001A0↑o
                db  1Bh
                db    3
                db  3Bh ; ;
                db  10h
                db    1
                db    0
                db    0
                db  21h ; !
                db    0
                db    0
                db    0
                db  1Ch
                db 0E0h
                db 0FFh
                db 0FFh
                db  5Ch ; \
                db    1
                db    0
                db    0
                db  0Ch
                db 0E2h
                db 0FFh
                db 0FFh
                db  2Ch ; ,
                db    1
                db    0
                db    0
                db 0F9h
                db 0E2h
                db 0FFh
                db 0FFh
                db  84h
                db    1
                db    0
                db    0
                db  3Ch ; <
                db 0E4h
                db 0FFh
                db 0FFh
                db 0A4h
                db    1
                db    0
                db    0
                db  58h ; X
                db 0E4h
                db 0FFh
                db 0FFh
                db 0BCh
                db    1
                db    0
                db    0
                db 0A3h
                db 0E4h
                db 0FFh
                db 0FFh
                db 0E4h
                db    1
                db    0
                db    0
                db  58h ; X
                db 0E5h
                db 0FFh
                db 0FFh
                db 0FCh
                db    1
                db    0
                db    0
                db  90h
                db 0E5h
                db 0FFh
                db 0FFh
                db  2Ch ; ,
                db    2
                db    0
                db    0
                db 0E1h
                db 0E5h
                db 0FFh
                db 0FFh
                db  44h ; D
                db    2
                db    0
                db    0
                db  22h ; "
                db 0E6h
                db 0FFh
                db 0FFh
                db  64h ; d
                db    2
                db    0
                db    0
                db  32h ; 2
                db 0E7h
                db 0FFh
                db 0FFh
                db 0ACh
                db    2
                db    0
                db    0
                db  70h ; p
                db 0E7h
                db 0FFh
                db 0FFh
                db 0C4h
                db    2
                db    0
                db    0
                db 0CCh
                db 0E7h
                db 0FFh
                db 0FFh
                db 0E4h
                db    2
                db    0
                db    0
                db  22h ; "
                db 0E8h
                db 0FFh
                db 0FFh
                db 0FCh
                db    2
                db    0
                db    0
                db  47h ; G
                db 0E8h
                db 0FFh
                db 0FFh
                db  14h
                db    3
                db    0
                db    0
                db  64h ; d
                db 0E8h
                db 0FFh
                db 0FFh
                db  2Ch ; ,
                db    3
                db    0
                db    0
                db 0CEh
                db 0E8h
                db 0FFh
                db 0FFh
                db  5Ch ; \
                db    3
                db    0
                db    0
                db 0B1h
                db 0E9h
                db 0FFh
                db 0FFh
                db  84h
                db    3
                db    0
                db    0
                db 0B3h
                db 0E9h
                db 0FFh
                db 0FFh
                db  9Ch
                db    3
                db    0
                db    0
                db 0F0h
                db 0E9h
                db 0FFh
                db 0FFh
                db 0C4h
                db    3
                db    0
                db    0
                db  31h ; 1
                db 0EAh
                db 0FFh
                db 0FFh
                db 0E4h
                db    3
                db    0
                db    0
                db  3Dh ; =
                db 0EBh
                db 0FFh
                db 0FFh
                db    4
                db    4
                db    0
                db    0
                db  73h ; s
                db 0EBh
                db 0FFh
                db 0FFh
                db  1Ch
                db    4
                db    0
                db    0
                db 0B5h
                db 0EBh
                db 0FFh
                db 0FFh
                db  34h ; 4
                db    4
                db    0
                db    0
                db 0DBh
                db 0ECh
                db 0FFh
                db 0FFh
                db  54h ; T
                db    4
                db    0
                db    0
                db  8Ch
                db 0EDh
                db 0FFh
                db 0FFh
                db  74h ; t
                db    4
                db    0
                db    0
                db 0BAh
                db 0EDh
                db 0FFh
                db 0FFh
                db  8Ch
                db    4
                db    0
                db    0
                db 0D8h
                db 0EEh
                db 0FFh
                db 0FFh
                db 0DCh
                db    4
                db    0
                db    0
                db 0DCh
                db 0F6h
                db 0FFh
                db 0FFh
                db  2Ch ; ,
                db    5
                db    0
                db    0
                db    3
                db 0F7h
                db 0FFh
                db 0FFh
                db  4Ch ; L
                db    5
                db    0
                db    0
                db 0D8h
                db 0F8h
                db 0FFh
                db 0FFh
                db  7Ch ; |
                db    5
                db    0
                db    0
                db  5Ch ; \
                db 0F9h
                db 0FFh
                db 0FFh
                db  9Ch
                db    5
                db    0
                db    0
                db 0CCh
                db 0F9h
                db 0FFh
                db 0FFh
                db 0E4h
                db    5
                db    0
                db    0
_eh_frame_hdr   ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_eh_frame       segment para public 'CONST' use64
                assume cs:_eh_frame
                ;org 402C68h
                db  14h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db  7Ah ; z
                db  52h ; R
                db    0
                db    1
                db  78h ; x
                db  10h
                db    1
                db  1Bh
                db  0Ch
                db    7
                db    8
                db  90h
                db    1
                db    7
                db  10h
                db  14h
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D8h
                db 0E0h
                db 0FFh
                db 0FFh
                db  2Ah ; *
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db  7Ah ; z
                db  52h ; R
                db    0
                db    1
                db  78h ; x
                db  10h
                db    1
                db  1Bh
                db  0Ch
                db    7
                db    8
                db  90h
                db    1
                db    0
                db    0
                db  24h ; $
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0B8h
                db 0DEh
                db 0FFh
                db 0FFh
                db 0F0h
                db    1
                db    0
                db    0
                db    0
                db  0Eh
                db  10h
                db  46h ; F
                db  0Eh
                db  18h
                db  4Ah ; J
                db  0Fh
                db  0Bh
                db  77h ; w
                db    8
                db  80h
                db    0
                db  3Fh ; ?
                db  1Ah
                db  3Bh ; ;
                db  2Ah ; *
                db  33h ; 3
                db  24h ; $
                db  22h ; "
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  44h ; D
                db    0
                db    0
                db    0
                db  6Dh ; m
                db 0E1h
                db 0FFh
                db 0FFh
                db  37h ; 7
                db    1
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  83h
                db    2
                db    3
                db  35h ; 5
                db    1
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db  64h ; d
                db    0
                db    0
                db    0
                db  90h
                db 0E2h
                db 0FFh
                db 0FFh
                db  1Ch
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  10h
                db  57h ; W
                db  0Eh
                db    8
                db    0
                db  24h ; $
                db    0
                db    0
                db    0
                db  7Ch ; |
                db    0
                db    0
                db    0
                db  94h
                db 0E2h
                db 0FFh
                db 0FFh
                db  4Bh ; K
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  41h ; A
                db  0Eh
                db  18h
                db  83h
                db    3
                db  44h ; D
                db  0Eh
                db  40h ; @
                db    2
                db  42h ; B
                db  0Eh
                db  18h
                db  41h ; A
                db  0Eh
                db  10h
                db  41h ; A
                db  0Eh
                db    8
                db  14h
                db    0
                db    0
                db    0
                db 0A4h
                db    0
                db    0
                db    0
                db 0B7h
                db 0E2h
                db 0FFh
                db 0FFh
                db 0B5h
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  20h
                db    2
                db 0B0h
                db  0Eh
                db    8
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db 0BCh
                db    0
                db    0
                db    0
                db  54h ; T
                db 0E3h
                db 0FFh
                db 0FFh
                db  38h ; 8
                db    0
                db    0
                db    0
                db    0
                db  42h ; B
                db  0Eh
                db  10h
                db  8Ch
                db    2
                db  41h ; A
                db  0Eh
                db  18h
                db  86h
                db    3
                db  41h ; A
                db  0Eh
                db  20h
                db  83h
                db    4
                db  70h ; p
                db  0Eh
                db  18h
                db  41h ; A
                db  0Eh
                db  10h
                db  42h ; B
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db 0ECh
                db    0
                db    0
                db    0
                db  5Ch ; \
                db 0E3h
                db 0FFh
                db 0FFh
                db  51h ; Q
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  20h
                db    2
                db  4Ch ; L
                db  0Eh
                db    8
                db  1Ch
                db    0
                db    0
                db    0
                db    4
                db    1
                db    0
                db    0
                db  95h
                db 0E3h
                db 0FFh
                db 0FFh
                db  41h ; A
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  83h
                db    2
                db  7Fh ; 
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db    0
                db    0
                db    0
                db  24h ; $
                db    1
                db    0
                db    0
                db 0B6h
                db 0E3h
                db 0FFh
                db 0FFh
                db  10h
                db    1
                db    0
                db    0
                db    0
                db  42h ; B
                db  0Eh
                db  10h
                db  8Eh
                db    2
                db  42h ; B
                db  0Eh
                db  18h
                db  8Dh
                db    3
                db  42h ; B
                db  0Eh
                db  20h
                db  8Ch
                db    4
                db  41h ; A
                db  0Eh
                db  28h ; (
                db  86h
                db    5
                db  41h ; A
                db  0Eh
                db  30h ; 0
                db  83h
                db    6
                db  44h ; D
                db  0Eh
                db  80h
                db    1
                db    2
                db 0FBh
                db  0Eh
                db  30h ; 0
                db  41h ; A
                db  0Eh
                db  28h ; (
                db  41h ; A
                db  0Eh
                db  20h
                db  42h ; B
                db  0Eh
                db  18h
                db  42h ; B
                db  0Eh
                db  10h
                db  42h ; B
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db  6Ch ; l
                db    1
                db    0
                db    0
                db  7Eh ; ~
                db 0E4h
                db 0FFh
                db 0FFh
                db  3Eh ; >
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  10h
                db  79h ; y
                db  0Eh
                db    8
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  84h
                db    1
                db    0
                db    0
                db 0A4h
                db 0E4h
                db 0FFh
                db 0FFh
                db  51h ; Q
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  83h
                db    2
                db    2
                db  4Fh ; O
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db 0A4h
                db    1
                db    0
                db    0
                db 0E0h
                db 0E4h
                db 0FFh
                db 0FFh
                db  56h ; V
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db 0BCh
                db    1
                db    0
                db    0
                db  1Eh
                db 0E5h
                db 0FFh
                db 0FFh
                db  25h ; %
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db 0D4h
                db    1
                db    0
                db    0
                db  2Bh ; +
                db 0E5h
                db 0FFh
                db 0FFh
                db  1Dh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db 0ECh
                db    1
                db    0
                db    0
                db  30h ; 0
                db 0E5h
                db 0FFh
                db 0FFh
                db  6Ah ; j
                db    0
                db    0
                db    0
                db    0
                db  42h ; B
                db  0Eh
                db  10h
                db  8Ch
                db    2
                db  41h ; A
                db  0Eh
                db  18h
                db  86h
                db    3
                db  41h ; A
                db  0Eh
                db  20h
                db  83h
                db    4
                db    2
                db  62h ; b
                db  0Eh
                db  18h
                db  41h ; A
                db  0Eh
                db  10h
                db  42h ; B
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  24h ; $
                db    0
                db    0
                db    0
                db  1Ch
                db    2
                db    0
                db    0
                db  6Ah ; j
                db 0E5h
                db 0FFh
                db 0FFh
                db 0E3h
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  83h
                db    2
                db  47h ; G
                db  0Eh
                db 0E0h
                db  40h ; @
                db    2
                db 0D9h
                db  0Eh
                db  10h
                db  41h ; A
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db  44h ; D
                db    2
                db    0
                db    0
                db  25h ; %
                db 0E6h
                db 0FFh
                db 0FFh
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  24h ; $
                db    0
                db    0
                db    0
                db  5Ch ; \
                db    2
                db    0
                db    0
                db  0Fh
                db 0E6h
                db 0FFh
                db 0FFh
                db  3Dh ; =
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  41h ; A
                db  0Eh
                db  18h
                db  83h
                db    3
                db  44h ; D
                db  0Eh
                db  20h
                db  74h ; t
                db  0Eh
                db  18h
                db  41h ; A
                db  0Eh
                db  10h
                db  41h ; A
                db  0Eh
                db    8
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  84h
                db    2
                db    0
                db    0
                db  24h ; $
                db 0E6h
                db 0FFh
                db 0FFh
                db  41h ; A
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  83h
                db    2
                db  7Fh ; 
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0A4h
                db    2
                db    0
                db    0
                db  45h ; E
                db 0E6h
                db 0FFh
                db 0FFh
                db  0Ch
                db    1
                db    0
                db    0
                db    0
                db  47h ; G
                db  0Eh
                db 0B0h
                db  80h
                db    1
                db    3
                db    4
                db    1
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db 0C4h
                db    2
                db    0
                db    0
                db  31h ; 1
                db 0E7h
                db 0FFh
                db 0FFh
                db  36h ; 6
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db 0DCh
                db    2
                db    0
                db    0
                db  4Fh ; O
                db 0E7h
                db 0FFh
                db 0FFh
                db  42h ; B
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  20h
                db  7Dh ; }
                db  0Eh
                db    8
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F4h
                db    2
                db    0
                db    0
                db  79h ; y
                db 0E7h
                db 0FFh
                db 0FFh
                db  26h ; &
                db    1
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  10h
                db    3
                db  21h ; !
                db    1
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  14h
                db    3
                db    0
                db    0
                db  7Fh ; 
                db 0E8h
                db 0FFh
                db 0FFh
                db 0AEh
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  80h
                db    1
                db    2
                db 0A9h
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db  34h ; 4
                db    3
                db    0
                db    0
                db  10h
                db 0E9h
                db 0FFh
                db 0FFh
                db  2Eh ; .
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Eh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  4Ch ; L
                db    0
                db    0
                db    0
                db  4Ch ; L
                db    3
                db    0
                db    0
                db  26h ; &
                db 0E9h
                db 0FFh
                db 0FFh
                db  1Eh
                db    1
                db    0
                db    0
                db    0
                db  42h ; B
                db  0Eh
                db  10h
                db  8Fh
                db    2
                db  42h ; B
                db  0Eh
                db  18h
                db  8Eh
                db    3
                db  42h ; B
                db  0Eh
                db  20h
                db  8Dh
                db    4
                db  42h ; B
                db  0Eh
                db  28h ; (
                db  8Ch
                db    5
                db  41h ; A
                db  0Eh
                db  30h ; 0
                db  86h
                db    6
                db  41h ; A
                db  0Eh
                db  38h ; 8
                db  83h
                db    7
                db  44h ; D
                db  0Eh
                db  70h ; p
                db    3
                db    5
                db    1
                db  0Eh
                db  38h ; 8
                db  41h ; A
                db  0Eh
                db  30h ; 0
                db  41h ; A
                db  0Eh
                db  28h ; (
                db  42h ; B
                db  0Eh
                db  20h
                db  42h ; B
                db  0Eh
                db  18h
                db  42h ; B
                db  0Eh
                db  10h
                db  42h ; B
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  4Ch ; L
                db    0
                db    0
                db    0
                db  9Ch
                db    3
                db    0
                db    0
                db 0F4h
                db 0E9h
                db 0FFh
                db 0FFh
                db    4
                db    8
                db    0
                db    0
                db    0
                db  42h ; B
                db  0Eh
                db  10h
                db  8Fh
                db    2
                db  42h ; B
                db  0Eh
                db  18h
                db  8Eh
                db    3
                db  42h ; B
                db  0Eh
                db  20h
                db  8Dh
                db    4
                db  42h ; B
                db  0Eh
                db  28h ; (
                db  8Ch
                db    5
                db  41h ; A
                db  0Eh
                db  30h ; 0
                db  86h
                db    6
                db  41h ; A
                db  0Eh
                db  38h ; 8
                db  83h
                db    7
                db  47h ; G
                db  0Eh
                db 0B0h
                db 0C1h
                db    2
                db    3
                db 0E8h
                db    7
                db  0Eh
                db  38h ; 8
                db  41h ; A
                db  0Eh
                db  30h ; 0
                db  41h ; A
                db  0Eh
                db  28h ; (
                db  42h ; B
                db  0Eh
                db  20h
                db  42h ; B
                db  0Eh
                db  18h
                db  42h ; B
                db  0Eh
                db  10h
                db  42h ; B
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0ECh
                db    3
                db    0
                db    0
                db 0A8h
                db 0F1h
                db 0FFh
                db 0FFh
                db  27h ; '
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  83h
                db    2
                db  65h ; e
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db  0Ch
                db    4
                db    0
                db    0
                db 0AFh
                db 0F1h
                db 0FFh
                db 0FFh
                db 0D5h
                db    1
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  41h ; A
                db  0Eh
                db  18h
                db  83h
                db    3
                db  44h ; D
                db  0Eh
                db  40h ; @
                db    3
                db 0CCh
                db    1
                db  0Eh
                db  18h
                db  41h ; A
                db  0Eh
                db  10h
                db  41h ; A
                db  0Eh
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  3Ch ; <
                db    4
                db    0
                db    0
                db  54h ; T
                db 0F3h
                db 0FFh
                db 0FFh
                db  79h ; y
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  83h
                db    2
                db  44h ; D
                db  0Eh
                db  20h
                db    2
                db  72h ; r
                db  0Eh
                db  10h
                db  41h ; A
                db  0Eh
                db    8
                db  44h ; D
                db    0
                db    0
                db    0
                db  5Ch ; \
                db    4
                db    0
                db    0
                db 0B8h
                db 0F3h
                db 0FFh
                db 0FFh
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db  42h ; B
                db  0Eh
                db  10h
                db  8Fh
                db    2
                db  45h ; E
                db  0Eh
                db  18h
                db  8Eh
                db    3
                db  45h ; E
                db  0Eh
                db  20h
                db  8Dh
                db    4
                db  45h ; E
                db  0Eh
                db  28h ; (
                db  8Ch
                db    5
                db  48h ; H
                db  0Eh
                db  30h ; 0
                db  86h
                db    6
                db  48h ; H
                db  0Eh
                db  38h ; 8
                db  83h
                db    7
                db  4Dh ; M
                db  0Eh
                db  40h ; @
                db  6Ch ; l
                db  0Eh
                db  38h ; 8
                db  41h ; A
                db  0Eh
                db  30h ; 0
                db  41h ; A
                db  0Eh
                db  28h ; (
                db  42h ; B
                db  0Eh
                db  20h
                db  42h ; B
                db  0Eh
                db  18h
                db  42h ; B
                db  0Eh
                db  10h
                db  42h ; B
                db  0Eh
                db    8
                db    0
                db  14h
                db    0
                db    0
                db    0
                db 0A4h
                db    4
                db    0
                db    0
                db 0E0h
                db 0F3h
                db 0FFh
                db 0FFh
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
__FRAME_END__   db    0
                db    0
                db    0
                db    0
_eh_frame       ends

; ELF Initialization Function Table
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_init_array     segment para public 'DATA' use64
                assume cs:_init_array
                ;org 603E10h
__frame_dummy_init_array_entry dq offset frame_dummy
                                        ; DATA XREF: LOAD:00000000004000F8↑o
                                        ; LOAD:0000000000400210↑o ...
_init_array     ends                    ; Alternative name is '__init_array_start'

; ELF Termination Function Table
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_fini_array     segment para public 'DATA' use64
                assume cs:_fini_array
                ;org 603E18h
__do_global_dtors_aux_fini_array_entry dq offset __do_global_dtors_aux
                                        ; DATA XREF: __libc_csu_init+19↑o
_fini_array     ends                    ; Alternative name is '__init_array_end'

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_jcr            segment para public 'DATA' use64
                assume cs:_jcr
                ;org 603E20h
__JCR_LIST__    dq 0                    ; DATA XREF: frame_dummy↑r
                                        ; frame_dummy+15↑o
_jcr            ends

; ELF Dynamic Information
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
LOAD            segment byte public 'DATA' use64
                assume cs:LOAD
                ;org 603E28h
_DYNAMIC        Elf64_Dyn <1, 1>        ; DATA XREF: LOAD:0000000000400130↑o
                                        ; .got.plt:_GLOBAL_OFFSET_TABLE_↓o
                                        ; DT_NEEDED libc.so.6
                Elf64_Dyn <0Ch, 400B50h> ; DT_INIT
                Elf64_Dyn <0Dh, 402524h> ; DT_FINI
                Elf64_Dyn <19h, 603E10h> ; DT_INIT_ARRAY
                Elf64_Dyn <1Bh, 8>      ; DT_INIT_ARRAYSZ
                Elf64_Dyn <1Ah, 603E18h> ; DT_FINI_ARRAY
                Elf64_Dyn <1Ch, 8>      ; DT_FINI_ARRAYSZ
                Elf64_Dyn <6FFFFEF5h, 400298h> ; DT_GNU_HASH
                Elf64_Dyn <5, 4005F8h>  ; DT_STRTAB
                Elf64_Dyn <6, 4002C8h>  ; DT_SYMTAB
                Elf64_Dyn <0Ah, 184h>   ; DT_STRSZ
                Elf64_Dyn <0Bh, 18h>    ; DT_SYMENT
                Elf64_Dyn <15h, 0>      ; DT_DEBUG
                Elf64_Dyn <3, 604000h>  ; DT_PLTGOT
                Elf64_Dyn <2, 2D0h>     ; DT_PLTRELSZ
                Elf64_Dyn <14h, 7>      ; DT_PLTREL
                Elf64_Dyn <17h, 400880h> ; DT_JMPREL
                Elf64_Dyn <7, 400820h>  ; DT_RELA
                Elf64_Dyn <8, 60h>      ; DT_RELASZ
                Elf64_Dyn <9, 18h>      ; DT_RELAENT
                Elf64_Dyn <6FFFFFFEh, 4007C0h> ; DT_VERNEED
                Elf64_Dyn <6FFFFFFFh, 1> ; DT_VERNEEDNUM
                Elf64_Dyn <6FFFFFF0h, 40077Ch> ; DT_VERSYM
                Elf64_Dyn <0>           ; DT_NULL
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
LOAD            ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_got            segment para public 'DATA' use64
                assume cs:_got
                ;org 603FF8h
__gmon_start___ptr dq offset __gmon_start__
                                        ; DATA XREF: _init_proc+4↑r
_got            ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_got_plt        segment para public 'DATA' use64
                assume cs:_got_plt
                ;org 604000h
_GLOBAL_OFFSET_TABLE_ dq offset _DYNAMIC
qword_604008    dq 0                    ; DATA XREF: sub_400B70↑r
qword_604010    dq 0                    ; DATA XREF: sub_400B70+6↑r
off_604018      dq offset getenv        ; DATA XREF: _getenv↑r
off_604020      dq offset strcasecmp    ; DATA XREF: _strcasecmp↑r
off_604028      dq offset __errno_location
                                        ; DATA XREF: ___errno_location↑r
off_604030      dq offset strcpy        ; DATA XREF: _strcpy↑r
off_604038      dq offset puts          ; DATA XREF: _puts↑r
off_604040      dq offset write         ; DATA XREF: _write↑r
off_604048      dq offset __stack_chk_fail
                                        ; DATA XREF: ___stack_chk_fail↑r
off_604050      dq offset alarm         ; DATA XREF: _alarm↑r
off_604058      dq offset close         ; DATA XREF: _close↑r
off_604060      dq offset read          ; DATA XREF: _read↑r
off_604068      dq offset __libc_start_main
                                        ; DATA XREF: ___libc_start_main↑r
off_604070      dq offset fgets         ; DATA XREF: _fgets↑r
off_604078      dq offset signal        ; DATA XREF: _signal↑r
off_604080      dq offset gethostbyname ; DATA XREF: _gethostbyname↑r
off_604088      dq offset __memmove_chk ; DATA XREF: ___memmove_chk↑r
off_604090      dq offset __memcpy_chk  ; DATA XREF: ___memcpy_chk↑r
off_604098      dq offset __gmon_start__
                                        ; DATA XREF: ___gmon_start__↑r
off_6040A0      dq offset strtol        ; DATA XREF: _strtol↑r
off_6040A8      dq offset fflush        ; DATA XREF: _fflush↑r
off_6040B0      dq offset __isoc99_sscanf
                                        ; DATA XREF: ___isoc99_sscanf↑r
off_6040B8      dq offset __printf_chk  ; DATA XREF: ___printf_chk↑r
off_6040C0      dq offset fopen         ; DATA XREF: _fopen↑r
off_6040C8      dq offset gethostname   ; DATA XREF: _gethostname↑r
off_6040D0      dq offset exit          ; DATA XREF: _exit↑r
off_6040D8      dq offset connect       ; DATA XREF: _connect↑r
off_6040E0      dq offset __fprintf_chk ; DATA XREF: ___fprintf_chk↑r
off_6040E8      dq offset sleep         ; DATA XREF: _sleep↑r
off_6040F0      dq offset __ctype_b_loc ; DATA XREF: ___ctype_b_loc↑r
off_6040F8      dq offset __sprintf_chk ; DATA XREF: ___sprintf_chk↑r
off_604100      dq offset socket        ; DATA XREF: _socket↑r
_got_plt        ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
LOAD            segment byte public 'DATA' use64
                assume cs:LOAD
                ;org 604108h
                align 20h
LOAD            ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_data           segment para public 'DATA' use64
                assume cs:_data
                ;org 604120h
                public __data_start ; weak
__data_start    db    0                 ; Alternative name is '__data_start'
                                        ; data_start
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public __dso_handle
__dso_handle    db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n1
n1              db  24h ; $             ; DATA XREF: secret_phase+2C↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  50h ; P
                db  41h ; A
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  41h ; A
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n21
n21             db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0D0h
                db  41h ; A
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db  90h
                db  41h ; A
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n22
n22             db  32h ; 2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0B0h
                db  41h ; A
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0F0h
                db  41h ; A
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n32
n32             db  16h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0B0h
                db  42h ; B
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  42h ; B
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n33
n33             db  2Dh ; -
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db  42h ; B
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0D0h
                db  42h ; B
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n31
n31             db    6
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db  42h ; B
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db  90h
                db  42h ; B
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n34
n34             db  6Bh ; k
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  50h ; P
                db  42h ; B
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0F0h
                db  42h ; B
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n45
n45             db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n41
n41             db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n47
n47             db  63h ; c
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n44
n44             db  23h ; #
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n42
n42             db    7
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n43
n43             db  14h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n46
n46             db  2Fh ; /
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public n48
n48             db 0E9h
                db    3
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public node1
node1           db  50h ; P             ; DATA XREF: phase_6:loc_401205↑o
                                        ; phase_6+B0↑o
                db    3
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db  20h
                db  43h ; C
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                public node2
node2           db  10h
                db    1
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db  30h ; 0
                db  43h ; C
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                public node3
node3           db 0BCh
                db    0
                db    0
                db    0
                db    3
                db    0
                db    0
                db    0
                db  40h ; @
                db  43h ; C
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                public node4
node4           db  42h ; B
                db    0
                db    0
                db    0
                db    4
                db    0
                db    0
                db    0
                db  50h ; P
                db  43h ; C
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                public node5
node5           db  2Ah ; *
                db    3
                db    0
                db    0
                db    5
                db    0
                db    0
                db    0
                db  60h ; `
                db  43h ; C
                db  60h ; `
                db    0
                db    0
                db    0
                db    0
                db    0
                public node6
node6           db 0C4h
                db    1
                db    0
                db    0
                db    6
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public user_password
user_password   db 'N0YVLkjiKSpwvj6QrGK6',0
                                        ; DATA XREF: send_msg+C2↑o
                public userid
userid          db '16307130006',0      ; DATA XREF: send_msg+C7↑o
                align 4
                public bomb_id
bomb_id         dd 4Bh                  ; DATA XREF: send_msg+8B↑r
                align 20h
                public host_table
; char *host_table
host_table      dq offset aCatlabUbuntu ; DATA XREF: initialize_bomb+3B↑r
                                        ; "catlab-ubuntu"
unk_6043A8      db    0                 ; DATA XREF: initialize_bomb+42↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_data           ends

; ===========================================================================

; Segment type: Uninitialized
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_bss            segment para public 'BSS' use64
                assume cs:_bss
                ;org 6047A0h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                public __bss_start
; FILE *_bss_start
__bss_start     dq ?                    ; DATA XREF: LOAD:00000000004005B0↑o
                                        ; deregister_tm_clones+6↑o ...
                                        ; Alternative name is '__TMC_END__'
                                        ; stdout@@GLIBC_2.2.5
                                        ; _edata
                                        ; Copy of shared data
                public stdin@@GLIBC_2_2_5
stdin@@GLIBC_2_2_5 dq ?                 ; DATA XREF: LOAD:00000000004005C8↑o
                                        ; main+6↑r ...
                                        ; Alternative name is 'stdin'
                                        ; Copy of shared data
                public stderr@@GLIBC_2_2_5
stderr@@GLIBC_2_2_5 dq ?                ; DATA XREF: LOAD:00000000004005E0↑o
                                        ; sigalrm_handler+13↑r
                                        ; Alternative name is 'stderr'
                                        ; Copy of shared data
completed_6982  db ?                    ; DATA XREF: __do_global_dtors_aux↑r
                                        ; __do_global_dtors_aux+13↑w
                align 4
                public num_input_strings
num_input_strings dd ?                  ; DATA XREF: skip:loc_401545↑r
                                        ; send_msg+1D↑r ...
                public infile
; FILE *infile
infile          dq ?                    ; DATA XREF: main+D↑w
                                        ; main+2C↑w ...
                align 20h
                public input_strings
input_strings   dq ?                    ; DATA XREF: read_line+DF↑w
                                        ; read_line+10D↑w
qword_6047E8    dq ?                    ; DATA XREF: read_line+F0↑w
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
unk_6048D0      db    ? ;               ; DATA XREF: phase_defused+3B↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                public scratch
scratch         db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
_bss            ends

; ===========================================================================

; Segment type: Zero-length
_prgend         segment byte public '' use64
_end            label byte
_prgend         ends

; ===========================================================================

; Segment type: Externs
; extern
; char *getenv(const char *name)
                extrn getenv:near       ; DATA XREF: .got.plt:off_604018↑o
; int strcasecmp(const char *s1, const char *s2)
                extrn strcasecmp:near   ; DATA XREF: .got.plt:off_604020↑o
; int *_errno_location(void)
                extrn __errno_location:near
                                        ; DATA XREF: .got.plt:off_604028↑o
; char *strcpy(char *dest, const char *src)
                extrn strcpy:near       ; DATA XREF: .got.plt:off_604030↑o
; int puts(const char *s)
                extrn puts:near         ; DATA XREF: .got.plt:off_604038↑o
; ssize_t write(int fd, const void *buf, size_t n)
                extrn write:near        ; DATA XREF: .got.plt:off_604040↑o
                extrn __stack_chk_fail:near
                                        ; DATA XREF: .got.plt:off_604048↑o
; unsigned int alarm(unsigned int seconds)
                extrn alarm:near        ; DATA XREF: .got.plt:off_604050↑o
; int close(int fd)
                extrn close:near        ; DATA XREF: .got.plt:off_604058↑o
; ssize_t read(int fd, void *buf, size_t nbytes)
                extrn read:near         ; DATA XREF: .got.plt:off_604060↑o
; int __cdecl _libc_start_main(int (__cdecl *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)
                extrn __libc_start_main:near
                                        ; DATA XREF: .got.plt:off_604068↑o
; char *fgets(char *s, int n, FILE *stream)
                extrn fgets:near        ; DATA XREF: .got.plt:off_604070↑o
; __sighandler_t signal(int sig, __sighandler_t handler)
                extrn signal:near       ; DATA XREF: .got.plt:off_604078↑o
; struct hostent *gethostbyname(const char *name)
                extrn gethostbyname:near
                                        ; DATA XREF: .got.plt:off_604080↑o
                extrn __memmove_chk:near
                                        ; DATA XREF: .got.plt:off_604088↑o
                extrn __memcpy_chk:near ; DATA XREF: .got.plt:off_604090↑o
; __int64 strtol(const char *nptr, char **endptr, int base)
                extrn strtol:near       ; DATA XREF: .got.plt:off_6040A0↑o
; int fflush(FILE *stream)
                extrn fflush:near       ; DATA XREF: .got.plt:off_6040A8↑o
                extrn __isoc99_sscanf:near
                                        ; DATA XREF: .got.plt:off_6040B0↑o
                extrn __printf_chk:near ; DATA XREF: .got.plt:off_6040B8↑o
; FILE *fopen(const char *filename, const char *modes)
                extrn fopen:near        ; DATA XREF: .got.plt:off_6040C0↑o
; int gethostname(char *name, size_t len)
                extrn gethostname:near  ; DATA XREF: .got.plt:off_6040C8↑o
; void __noreturn exit(int status)
                extrn exit:near         ; DATA XREF: .got.plt:off_6040D0↑o
; int connect(int fd, const struct sockaddr *addr, socklen_t len)
                extrn connect:near      ; DATA XREF: .got.plt:off_6040D8↑o
                extrn __fprintf_chk:near
                                        ; DATA XREF: .got.plt:off_6040E0↑o
; unsigned int sleep(unsigned int seconds)
                extrn sleep:near        ; DATA XREF: .got.plt:off_6040E8↑o
; const unsigned __int16 **_ctype_b_loc(void)
                extrn __ctype_b_loc:near
                                        ; DATA XREF: .got.plt:off_6040F0↑o
                extrn __sprintf_chk:near
                                        ; DATA XREF: .got.plt:off_6040F8↑o
; int socket(int domain, int type, int protocol)
                extrn socket:near       ; DATA XREF: .got.plt:off_604100↑o
                extrn __gmon_start__ ; weak
                                        ; DATA XREF: .got:__gmon_start___ptr↑o
                                        ; .got.plt:off_604098↑o


                end _start
